{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    }
  ],
  "bytecode": {
    "object": "0x608060405230fffe",
    "sourceMap": "179:99:4:-:0;;;262:4;233:36",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080fdfea164736f6c634300080a000a",
    "sourceMap": "179:99:4:-:0;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "ast": {
    "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/L2/Burner.sol",
    "id": 1035,
    "exportedSymbols": {
      "Burner": [
        1034
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:248:4",
    "nodes": [
      {
        "id": 1018,
        "nodeType": "PragmaDirective",
        "src": "31:23:4",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 1034,
        "nodeType": "ContractDefinition",
        "src": "179:99:4",
        "nodes": [
          {
            "id": 1033,
            "nodeType": "FunctionDefinition",
            "src": "201:75:4",
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "223:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1027,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "262:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Burner_$1034",
                                  "typeString": "contract Burner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Burner_$1034",
                                  "typeString": "contract Burner"
                                }
                              ],
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "254:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "254:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "254:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "246:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "246:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "246:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1022,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "233:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "233:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "233:36:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:2:4"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "223:0:4"
            },
            "scope": 1034,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Burner",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1019,
          "nodeType": "StructuredDocumentation",
          "src": "56:122:4",
          "text": " @title Burner\n @dev This contract is used to remove ETH from\n the L2 circulating supply as it is withdrawn."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1034
        ],
        "name": "Burner",
        "nameLocation": "188:6:4",
        "scope": 1035,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  }
}