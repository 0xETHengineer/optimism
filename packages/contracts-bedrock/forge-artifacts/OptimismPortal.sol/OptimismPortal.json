{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract L2OutputOracle",
          "name": "_l2Oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_finalizationPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidOutputRootProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidWithdrawalInclusionProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroCreationTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawalAlreadyFinalized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "gasLimit",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isCreation",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TransactionDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "WithdrawalFinalized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FINALIZATION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "L2_ORACLE",
      "outputs": [
        {
          "internalType": "contract L2OutputOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_gasLimit",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "_isCreation",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "depositTransaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_l2Timestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "withdrawerStorageRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "latestBlockhash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct WithdrawalVerifier.OutputRootProof",
          "name": "_outputRootProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_withdrawalProof",
          "type": "bytes"
        }
      ],
      "name": "finalizeWithdrawalTransaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "finalizedWithdrawals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Sender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052600080546001600160a01b03191661dead1790553480156200002557600080fd5b50604051620025da380380620025da83398101604081905262000048916200005f565b6001600160a01b0390911660a0526080526200009b565b600080604083850312156200007357600080fd5b82516001600160a01b03811681146200008b57600080fd5b6020939093015192949293505050565b60805160a05161250c620000ce6000396000818160a6015261036d01526000818161019701526103f0015261250c6000f3fe6080604052600436106100685760003560e01c8063e9e05c4211610043578063e9e05c421461015f578063eecf1c3614610172578063ff61cc931461018557600080fd5b80621c2ff6146100945780639bf62d82146100f2578063a14238e71461011f57600080fd5b3661008f5761008d3334620186a06000604051806020016040528060008152506101c7565b005b600080fd5b3480156100a057600080fd5b506100c87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100fe57600080fd5b506000546100c89073ffffffffffffffffffffffffffffffffffffffff1681565b34801561012b57600080fd5b5061014f61013a366004611e74565b60016020526000908152604090205460ff1681565b60405190151581526020016100e9565b61008d61016d366004611f34565b6101c7565b61008d61018036600461207e565b6102b6565b34801561019157600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e9565b8180156101e9575073ffffffffffffffffffffffffffffffffffffffff851615155b15610220576040517ff98844ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33328114610241575033731111000000000000000000000000000000001111015b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f78231ae6eb73366f912bb1d64351601fb76344c537bbab635ce14d0f376f019534888888886040516102a69594939291906121e9565b60405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff891630141561033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f43616e6e6f742073656e64206d65737361676520746f2073656c662e0000000060448201526064015b60405180910390fd5b6040517fa25ae557000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a25ae557906024016040805180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190612220565b90507f0000000000000000000000000000000000000000000000000000000000000000816020015161041e919061229e565b4211610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f706f73616c206973206e6f74207965742066696e616c697a65642e00006044820152606401610332565b61049d610498368690038601866122b6565b6107c0565b8151146104d6576040517f9cc00b5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061051c8d8d8d8d8d8d8d8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061081c92505050565b905061056381866040013586868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061085b92505050565b610599576040517feb00eb2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602081905260409091205460ff16151514156105e8576040517fae89945400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909117905561062e89614e2061229e565b5a10156106bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f496e73756666696369656e742067617320746f2066696e616c697a652077697460448201527f6864726177616c2e0000000000000000000000000000000000000000000000006064820152608401610332565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8e16178155604080516020601f8b01819004810282018101909252898152610742918e918d918f9186918f908f908190840183828082843760009201919091525061092492505050565b50600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560405190915082907fdb5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b906107a890841515815260200190565b60405180910390a25050505050505050505050505050565b600081600001518260200151836040015184606001516040516020016107ff949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60008686868686866040516020016108399695949392919061231c565b6040516020818303038152906040528051906020012090509695505050505050565b604080516020810185905260009181018290528190606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012090830181905292506109199101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600182527f010000000000000000000000000000000000000000000000000000000000000060208301529085876109af565b9150505b9392505050565b6000606060008060008661ffff1667ffffffffffffffff81111561094a5761094a611eb6565b6040519080825280601f01601f191660200182016040528015610974576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115610995578692505b828152826000602083013e90999098509650505050505050565b6000806109bb866109d3565b90506109c981868686610a05565b9695505050505050565b606081805190602001206040516020016109ef91815260200190565b6040516020818303038152906040529050919050565b6000806000610a15878686610a36565b91509150818015610a2b5750610a2b8682610b2b565b979650505050505050565b600060606000610a4585610b47565b90506000806000610a57848a89610c42565b81519295509093509150158080610a6b5750815b610ad1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e0000000000006044820152606401610332565b600081610aed5760405180602001604052806000815250610b19565b610b1986610afc600188612373565b81518110610b0c57610b0c61238a565b602002602001015161115f565b919b919a509098505050505050505050565b6000818051906020012083805190602001201490505b92915050565b60606000610b5483611189565b90506000815167ffffffffffffffff811115610b7257610b72611eb6565b604051908082528060200260200182016040528015610bb757816020015b6040805180820190915260608082526020820152815260200190600190039081610b905790505b50905060005b8251811015610c3a576000610bea848381518110610bdd57610bdd61238a565b60200260200101516111bc565b90506040518060400160405280828152602001610c0683611189565b815250838381518110610c1b57610c1b61238a565b6020026020010181905250508080610c32906123b9565b915050610bbd565b509392505050565b60006060818080610c5287611266565b90506000869050600080610c79604051806040016040528060608152602001606081525090565b60005b8c5181101561111b578c8181518110610c9757610c9761238a565b602002602001015191508284610cad919061229e565b9350610cba60018861229e565b965083610d3857815180516020909101208514610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c696420726f6f7420686173680000000000000000000000000000006044820152606401610332565b610e29565b815151602011610db457815180516020909101208514610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c206861736800000000006044820152606401610332565b84610dc283600001516113e9565b14610e29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f646520686173680000000000006044820152606401610332565b610e356010600161229e565b8260200151511415610eae578551841415610e4f5761111b565b6000868581518110610e6357610e6361238a565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110610e8e57610e8e61238a565b60200260200101519050610ea181611411565b9650600194505050611109565b600282602001515114156110a7576000610ec783611447565b9050600081600081518110610ede57610ede61238a565b016020015160f81c90506000610ef5600283612421565b610f00906002612443565b90506000610f11848360ff1661146b565b90506000610f1f8b8a61146b565b90506000610f2d83836114a1565b905060ff851660021480610f44575060ff85166003145b15610f9a57808351148015610f595750808251145b15610f6b57610f68818b61229e565b99505b507f8000000000000000000000000000000000000000000000000000000000000000995061111b945050505050565b60ff85161580610fad575060ff85166001145b1561101f5782518114610fe957507f8000000000000000000000000000000000000000000000000000000000000000995061111b945050505050565b61101088602001516001815181106110035761100361238a565b6020026020010151611411565b9a509750611109945050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e2060448201527f70726566697800000000000000000000000000000000000000000000000000006064820152608401610332565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e0000006044820152606401610332565b80611113816123b9565b915050610c7c565b507f800000000000000000000000000000000000000000000000000000000000000084148661114a878661146b565b909e909d50909b509950505050505050505050565b60208101518051606091610b419161117990600190612373565b81518110610bdd57610bdd61238a565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610b419061154d565b606060008060006111cc85611780565b9194509250905060008160018111156111e7576111e7612466565b1461124e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e00000000000000006044820152606401610332565b61125d85602001518484611b87565b95945050505050565b60606000825160026112789190612495565b67ffffffffffffffff81111561129057611290611eb6565b6040519080825280601f01601f1916602001820160405280156112ba576020820181803683370190505b50905060005b83518110156113e25760048482815181106112dd576112dd61238a565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c82611312836002612495565b815181106113225761132261238a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060108482815181106113655761136561238a565b0160200151611377919060f81c612421565b60f81b82611386836002612495565b61139190600161229e565b815181106113a1576113a161238a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806113da816123b9565b9150506112c0565b5092915050565b60006020825110156113fd57506020015190565b81806020019051810190610b4191906124d2565b600060606020836000015110156114325761142b83611c66565b905061143e565b61143b836111bc565b90505b61091d816113e9565b6060610b416114668360200151600081518110610bdd57610bdd61238a565b611266565b60608251821061148a5750604080516020810190915260008152610b41565b61091d838384865161149c9190612373565b611c71565b6000805b8084511180156114b55750808351115b801561153657508281815181106114ce576114ce61238a565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684828151811061150d5761150d61238a565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016145b1561091d5780611545816123b9565b9150506114a5565b606060008061155b84611780565b9193509091506001905081600181111561157757611577612466565b146115de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401610332565b6040805160208082526104208201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816115f75790505090506000835b865181101561177557602082106116bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201527f7374206c656e6774682e000000000000000000000000000000000000000000006064820152608401610332565b6000806116fa6040518060400160405280858c600001516116de9190612373565b8152602001858c602001516116f3919061229e565b9052611780565b509150915060405180604001604052808383611716919061229e565b8152602001848b6020015161172b919061229e565b8152508585815181106117405761174061238a565b602090810291909101015261175660018561229e565b9350611762818361229e565b61176c908461229e565b92505050611624565b508152949350505050565b6000806000808460000151116117f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e00000000000000006044820152606401610332565b6020840151805160001a607f8111611817576000600160009450945094505050611b80565b60b781116118ad57600061182c608083612373565b90508087600001511161189b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401610332565b60019550935060009250611b80915050565b60bf81116119d05760006118c260b783612373565b905080876000015111611931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e006044820152606401610332565b600183015160208290036101000a900461194b818361229e565b8851116119b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401610332565b6119bf82600161229e565b9650945060009350611b8092505050565b60f78111611a655760006119e560c083612373565b905080876000015111611a54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e0000000000000000006044820152606401610332565b600195509350849250611b80915050565b6000611a7260f783612373565b905080876000015111611ae1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e0000006044820152606401610332565b600183015160208290036101000a9004611afb818361229e565b885111611b64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420524c50206c6f6e67206c6973742e000000000000000000006044820152606401610332565b611b6f82600161229e565b9650945060019350611b8092505050565b9193909250565b606060008267ffffffffffffffff811115611ba457611ba4611eb6565b6040519080825280601f01601f191660200182016040528015611bce576020820181803683370190505b509050805160001415611be257905061091d565b6000611bee858761229e565b90506020820160005b611c026020876124eb565b811015611c395782518252611c1860208461229e565b9250611c2560208361229e565b915080611c31816123b9565b915050611bf7565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610b4182611e5e565b606081611c7f81601f61229e565b1015611ce7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610332565b82611cf2838261229e565b1015611d5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610332565b611d64828461229e565b84511015611dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610332565b606082158015611ded5760405191506000825260208201604052611e55565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611e26578051835260209283019201611e0e565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060610b41826020015160008460000151611b87565b600060208284031215611e8657600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611eb157600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f2c57611f2c611eb6565b604052919050565b600080600080600060a08688031215611f4c57600080fd5b611f5586611e8d565b94506020808701359450604087013567ffffffffffffffff8082168214611f7b57600080fd5b9094506060880135908115158214611f9257600080fd5b90935060808801359080821115611fa857600080fd5b818901915089601f830112611fbc57600080fd5b813581811115611fce57611fce611eb6565b611ffe847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ee5565b91508082528a8482850101111561201457600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60008083601f84011261204757600080fd5b50813567ffffffffffffffff81111561205f57600080fd5b60208301915083602082850101111561207757600080fd5b9250929050565b60008060008060008060008060008060006101808c8e0312156120a057600080fd5b8b359a506120b060208d01611e8d565b99506120be60408d01611e8d565b985060608c0135975060808c0135965067ffffffffffffffff60a08d013511156120e757600080fd5b6120f78d60a08e01358e01612035565b909650945060c08c0135935060808c8e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561213557600080fd5b60e08c01925067ffffffffffffffff6101608d0135111561215557600080fd5b6121668d6101608e01358e01612035565b81935080925050509295989b509295989b9093969950565b6000815180845260005b818110156121a457602081850181015186830182015201612188565b818111156121b6576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b85815284602082015267ffffffffffffffff84166040820152821515606082015260a060808201526000610a2b60a083018461217e565b60006040828403121561223257600080fd5b6040516040810181811067ffffffffffffffff8211171561225557612255611eb6565b604052825181526020928301519281019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156122b1576122b161226f565b500190565b6000608082840312156122c857600080fd5b6040516080810181811067ffffffffffffffff821117156122eb576122eb611eb6565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261236760c083018461217e565b98975050505050505050565b6000828210156123855761238561226f565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123eb576123eb61226f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060ff831680612434576124346123f2565b8060ff84160691505092915050565b600060ff821660ff84168082101561245d5761245d61226f565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124cd576124cd61226f565b500290565b6000602082840312156124e457600080fd5b5051919050565b6000826124fa576124fa6123f2565b50049056fea164736f6c634300080a000a",
    "sourceMap": "437:7858:3:-:0;;;2504:43;;;-1:-1:-1;;;;;;2504:43:3;1864:42;2504:43;;;2812:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2889:21:3;;;;;2920:41;;437:7858;;14:373:69;115:6;123;176:2;164:9;155:7;151:23;147:32;144:52;;;192:1;189;182:12;144:52;218:16;;-1:-1:-1;;;;;263:31:69;;253:42;;243:70;;309:1;306;299:12;243:70;377:2;362:18;;;;356:25;332:5;;356:25;;-1:-1:-1;;;14:373:69:o;:::-;437:7858:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100685760003560e01c8063e9e05c4211610043578063e9e05c421461015f578063eecf1c3614610172578063ff61cc931461018557600080fd5b80621c2ff6146100945780639bf62d82146100f2578063a14238e71461011f57600080fd5b3661008f5761008d3334620186a06000604051806020016040528060008152506101c7565b005b600080fd5b3480156100a057600080fd5b506100c87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100fe57600080fd5b506000546100c89073ffffffffffffffffffffffffffffffffffffffff1681565b34801561012b57600080fd5b5061014f61013a366004611e74565b60016020526000908152604090205460ff1681565b60405190151581526020016100e9565b61008d61016d366004611f34565b6101c7565b61008d61018036600461207e565b6102b6565b34801561019157600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e9565b8180156101e9575073ffffffffffffffffffffffffffffffffffffffff851615155b15610220576040517ff98844ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33328114610241575033731111000000000000000000000000000000001111015b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f78231ae6eb73366f912bb1d64351601fb76344c537bbab635ce14d0f376f019534888888886040516102a69594939291906121e9565b60405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff891630141561033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f43616e6e6f742073656e64206d65737361676520746f2073656c662e0000000060448201526064015b60405180910390fd5b6040517fa25ae557000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a25ae557906024016040805180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190612220565b90507f0000000000000000000000000000000000000000000000000000000000000000816020015161041e919061229e565b4211610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f706f73616c206973206e6f74207965742066696e616c697a65642e00006044820152606401610332565b61049d610498368690038601866122b6565b6107c0565b8151146104d6576040517f9cc00b5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061051c8d8d8d8d8d8d8d8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061081c92505050565b905061056381866040013586868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061085b92505050565b610599576040517feb00eb2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602081905260409091205460ff16151514156105e8576040517fae89945400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909117905561062e89614e2061229e565b5a10156106bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f496e73756666696369656e742067617320746f2066696e616c697a652077697460448201527f6864726177616c2e0000000000000000000000000000000000000000000000006064820152608401610332565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8e16178155604080516020601f8b01819004810282018101909252898152610742918e918d918f9186918f908f908190840183828082843760009201919091525061092492505050565b50600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560405190915082907fdb5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b906107a890841515815260200190565b60405180910390a25050505050505050505050505050565b600081600001518260200151836040015184606001516040516020016107ff949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60008686868686866040516020016108399695949392919061231c565b6040516020818303038152906040528051906020012090509695505050505050565b604080516020810185905260009181018290528190606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012090830181905292506109199101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600182527f010000000000000000000000000000000000000000000000000000000000000060208301529085876109af565b9150505b9392505050565b6000606060008060008661ffff1667ffffffffffffffff81111561094a5761094a611eb6565b6040519080825280601f01601f191660200182016040528015610974576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115610995578692505b828152826000602083013e90999098509650505050505050565b6000806109bb866109d3565b90506109c981868686610a05565b9695505050505050565b606081805190602001206040516020016109ef91815260200190565b6040516020818303038152906040529050919050565b6000806000610a15878686610a36565b91509150818015610a2b5750610a2b8682610b2b565b979650505050505050565b600060606000610a4585610b47565b90506000806000610a57848a89610c42565b81519295509093509150158080610a6b5750815b610ad1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e0000000000006044820152606401610332565b600081610aed5760405180602001604052806000815250610b19565b610b1986610afc600188612373565b81518110610b0c57610b0c61238a565b602002602001015161115f565b919b919a509098505050505050505050565b6000818051906020012083805190602001201490505b92915050565b60606000610b5483611189565b90506000815167ffffffffffffffff811115610b7257610b72611eb6565b604051908082528060200260200182016040528015610bb757816020015b6040805180820190915260608082526020820152815260200190600190039081610b905790505b50905060005b8251811015610c3a576000610bea848381518110610bdd57610bdd61238a565b60200260200101516111bc565b90506040518060400160405280828152602001610c0683611189565b815250838381518110610c1b57610c1b61238a565b6020026020010181905250508080610c32906123b9565b915050610bbd565b509392505050565b60006060818080610c5287611266565b90506000869050600080610c79604051806040016040528060608152602001606081525090565b60005b8c5181101561111b578c8181518110610c9757610c9761238a565b602002602001015191508284610cad919061229e565b9350610cba60018861229e565b965083610d3857815180516020909101208514610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c696420726f6f7420686173680000000000000000000000000000006044820152606401610332565b610e29565b815151602011610db457815180516020909101208514610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c206861736800000000006044820152606401610332565b84610dc283600001516113e9565b14610e29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f646520686173680000000000006044820152606401610332565b610e356010600161229e565b8260200151511415610eae578551841415610e4f5761111b565b6000868581518110610e6357610e6361238a565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110610e8e57610e8e61238a565b60200260200101519050610ea181611411565b9650600194505050611109565b600282602001515114156110a7576000610ec783611447565b9050600081600081518110610ede57610ede61238a565b016020015160f81c90506000610ef5600283612421565b610f00906002612443565b90506000610f11848360ff1661146b565b90506000610f1f8b8a61146b565b90506000610f2d83836114a1565b905060ff851660021480610f44575060ff85166003145b15610f9a57808351148015610f595750808251145b15610f6b57610f68818b61229e565b99505b507f8000000000000000000000000000000000000000000000000000000000000000995061111b945050505050565b60ff85161580610fad575060ff85166001145b1561101f5782518114610fe957507f8000000000000000000000000000000000000000000000000000000000000000995061111b945050505050565b61101088602001516001815181106110035761100361238a565b6020026020010151611411565b9a509750611109945050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e2060448201527f70726566697800000000000000000000000000000000000000000000000000006064820152608401610332565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e0000006044820152606401610332565b80611113816123b9565b915050610c7c565b507f800000000000000000000000000000000000000000000000000000000000000084148661114a878661146b565b909e909d50909b509950505050505050505050565b60208101518051606091610b419161117990600190612373565b81518110610bdd57610bdd61238a565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610b419061154d565b606060008060006111cc85611780565b9194509250905060008160018111156111e7576111e7612466565b1461124e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e00000000000000006044820152606401610332565b61125d85602001518484611b87565b95945050505050565b60606000825160026112789190612495565b67ffffffffffffffff81111561129057611290611eb6565b6040519080825280601f01601f1916602001820160405280156112ba576020820181803683370190505b50905060005b83518110156113e25760048482815181106112dd576112dd61238a565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c82611312836002612495565b815181106113225761132261238a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060108482815181106113655761136561238a565b0160200151611377919060f81c612421565b60f81b82611386836002612495565b61139190600161229e565b815181106113a1576113a161238a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806113da816123b9565b9150506112c0565b5092915050565b60006020825110156113fd57506020015190565b81806020019051810190610b4191906124d2565b600060606020836000015110156114325761142b83611c66565b905061143e565b61143b836111bc565b90505b61091d816113e9565b6060610b416114668360200151600081518110610bdd57610bdd61238a565b611266565b60608251821061148a5750604080516020810190915260008152610b41565b61091d838384865161149c9190612373565b611c71565b6000805b8084511180156114b55750808351115b801561153657508281815181106114ce576114ce61238a565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684828151811061150d5761150d61238a565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016145b1561091d5780611545816123b9565b9150506114a5565b606060008061155b84611780565b9193509091506001905081600181111561157757611577612466565b146115de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401610332565b6040805160208082526104208201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816115f75790505090506000835b865181101561177557602082106116bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201527f7374206c656e6774682e000000000000000000000000000000000000000000006064820152608401610332565b6000806116fa6040518060400160405280858c600001516116de9190612373565b8152602001858c602001516116f3919061229e565b9052611780565b509150915060405180604001604052808383611716919061229e565b8152602001848b6020015161172b919061229e565b8152508585815181106117405761174061238a565b602090810291909101015261175660018561229e565b9350611762818361229e565b61176c908461229e565b92505050611624565b508152949350505050565b6000806000808460000151116117f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e00000000000000006044820152606401610332565b6020840151805160001a607f8111611817576000600160009450945094505050611b80565b60b781116118ad57600061182c608083612373565b90508087600001511161189b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401610332565b60019550935060009250611b80915050565b60bf81116119d05760006118c260b783612373565b905080876000015111611931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e006044820152606401610332565b600183015160208290036101000a900461194b818361229e565b8851116119b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401610332565b6119bf82600161229e565b9650945060009350611b8092505050565b60f78111611a655760006119e560c083612373565b905080876000015111611a54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e0000000000000000006044820152606401610332565b600195509350849250611b80915050565b6000611a7260f783612373565b905080876000015111611ae1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e0000006044820152606401610332565b600183015160208290036101000a9004611afb818361229e565b885111611b64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420524c50206c6f6e67206c6973742e000000000000000000006044820152606401610332565b611b6f82600161229e565b9650945060019350611b8092505050565b9193909250565b606060008267ffffffffffffffff811115611ba457611ba4611eb6565b6040519080825280601f01601f191660200182016040528015611bce576020820181803683370190505b509050805160001415611be257905061091d565b6000611bee858761229e565b90506020820160005b611c026020876124eb565b811015611c395782518252611c1860208461229e565b9250611c2560208361229e565b915080611c31816123b9565b915050611bf7565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610b4182611e5e565b606081611c7f81601f61229e565b1015611ce7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610332565b82611cf2838261229e565b1015611d5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610332565b611d64828461229e565b84511015611dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610332565b606082158015611ded5760405191506000825260208201604052611e55565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611e26578051835260209283019201611e0e565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060610b41826020015160008460000151611b87565b600060208284031215611e8657600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611eb157600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f2c57611f2c611eb6565b604052919050565b600080600080600060a08688031215611f4c57600080fd5b611f5586611e8d565b94506020808701359450604087013567ffffffffffffffff8082168214611f7b57600080fd5b9094506060880135908115158214611f9257600080fd5b90935060808801359080821115611fa857600080fd5b818901915089601f830112611fbc57600080fd5b813581811115611fce57611fce611eb6565b611ffe847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ee5565b91508082528a8482850101111561201457600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60008083601f84011261204757600080fd5b50813567ffffffffffffffff81111561205f57600080fd5b60208301915083602082850101111561207757600080fd5b9250929050565b60008060008060008060008060008060006101808c8e0312156120a057600080fd5b8b359a506120b060208d01611e8d565b99506120be60408d01611e8d565b985060608c0135975060808c0135965067ffffffffffffffff60a08d013511156120e757600080fd5b6120f78d60a08e01358e01612035565b909650945060c08c0135935060808c8e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561213557600080fd5b60e08c01925067ffffffffffffffff6101608d0135111561215557600080fd5b6121668d6101608e01358e01612035565b81935080925050509295989b509295989b9093969950565b6000815180845260005b818110156121a457602081850181015186830182015201612188565b818111156121b6576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b85815284602082015267ffffffffffffffff84166040820152821515606082015260a060808201526000610a2b60a083018461217e565b60006040828403121561223257600080fd5b6040516040810181811067ffffffffffffffff8211171561225557612255611eb6565b604052825181526020928301519281019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156122b1576122b161226f565b500190565b6000608082840312156122c857600080fd5b6040516080810181811067ffffffffffffffff821117156122eb576122eb611eb6565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261236760c083018461217e565b98975050505050505050565b6000828210156123855761238561226f565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123eb576123eb61226f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060ff831680612434576124346123f2565b8060ff84160691505092915050565b600060ff821660ff84168082101561245d5761245d61226f565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124cd576124cd61226f565b500290565b6000602082840312156124e457600080fd5b5051919050565b6000826124fa576124fa6123f2565b50049056fea164736f6c634300080a000a",
    "sourceMap": "437:7858:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3390:67;3409:10;3421:9;3432:6;3440:5;3447:9;;;;;;;;;;;;3390:18;:67::i;:::-;437:7858;;;;;2184:41;;;;;;;;;;;;;;;;;;212:42:69;200:55;;;182:74;;170:2;155:18;2184:41:3;;;;;;;;2504:43;;;;;;;;;;-1:-1:-1;2504:43:3;;;;;;;;2688:52;;;;;;;;;;-1:-1:-1;2688:52:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;848:14:69;;841:22;823:41;;811:2;796:18;2688:52:3;683:187:69;3903:703:3;;;;;;:::i;:::-;;:::i;5231:3062::-;;;;;;:::i;:::-;;:::i;2071:44::-;;;;;;;;;;;;;;;;;;4759:25:69;;;4747:2;4732:18;2071:44:3;4613:177:69;3903:703:3;4181:11;:32;;;;-1:-1:-1;4196:17:3;;;;;4181:32;4177:93;;;4236:23;;;;;;;;;;;;;;4177:93;4295:10;4413:9;4399:23;;4395:108;;-1:-1:-1;4481:10:3;741:42:14;1213:27;4395:108:3;4545:3;4518:81;;4539:4;4518:81;;;4550:9;4561:6;4569:9;4580:11;4593:5;4518:81;;;;;;;;;;:::i;:::-;;;;;;;;4077:529;3903:703;;;;;:::o;5231:3062::-;5637:24;;;5656:4;5637:24;;5629:65;;;;;;;6074:2:69;5629:65:3;;;6056:21:69;6113:2;6093:18;;;6086:30;6152;6132:18;;;6125:58;6200:18;;5629:65:3;;;;;;;;;5785:35;;;;;;;;4759:25:69;;;5737:45:3;;5785:9;:21;;;;;4732:18:69;;5785:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5737:83;;6094:19;6073:8;:18;;;:40;;;;:::i;:::-;6055:15;:58;6034:135;;;;;;;7265:2:69;6034:135:3;;;7247:21:69;7304:2;7284:18;;;7277:30;7343:32;7323:18;;;7316:60;7393:18;;6034:135:3;7063:354:69;6034:135:3;6295:54;;;;;;;;6332:16;6295:54;:::i;:::-;:36;:54::i;:::-;6272:19;;:77;6268:139;;6372:24;;;;;;;;;;;;;;6268:139;6563:22;6588:167;6635:6;6655:7;6676;6697:6;6717:9;6740:5;;6588:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6588:33:3;;-1:-1:-1;;;6588:167:3:i;:::-;6563:192;;6844:181;6907:14;6939:16;:38;;;6995:16;;6844:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6844:45:3;;-1:-1:-1;;;6844:181:3:i;:::-;6827:283;;7066:33;;;;;;;;;;;;;;6827:283;7194:36;;;;:20;:36;;;;;;;;;;;:44;;;7190:110;;;7261:28;;;;;;;;;;;;;;7190:110;7353:36;;;;7392:4;7353:36;;;;;;;;:43;;;;;;;;;7501:17;:9;7513:5;7501:17;:::i;:::-;7488:9;:30;;7480:83;;;;;;;8275:2:69;7480:83:3;;;8257:21:69;8314:2;8294:18;;;8287:30;8353:34;8333:18;;;8326:62;8424:10;8404:18;;;8397:38;8452:19;;7480:83:3;8073:404:69;7480:83:3;7691:8;:18;;;;;;;;;;7857:147;;;;;;;;;;;;;;;;;;;;;;;;7910:7;;7931:9;;7954:6;;7691:8;;7989:5;;7857:147;;;;;;7989:5;7857:147;;7989:5;7857:147;;;;;;;;;-1:-1:-1;7857:39:3;;-1:-1:-1;;;7857:147:3:i;:::-;-1:-1:-1;8055:8:3;:28;;;;1864:42;8055:28;;;8242:44;;7838:166;;-1:-1:-1;8262:14:3;;8242:44;;;;7838:166;848:14:69;841:22;823:41;;811:2;796:18;;683:187;8242:44:3;;;;;;;;5589:2704;;;5231:3062;;;;;;;;;;;:::o;1650:441:21:-;1765:7;1866:16;:24;;;1912:16;:26;;;1960:16;:38;;;2020:16;:32;;;1834:236;;;;;;;;;;8713:25:69;;;8769:2;8754:18;;8747:34;;;;8812:2;8797:18;;8790:34;8855:2;8840:18;;8833:34;8700:3;8685:19;;8482:391;1834:236:21;;;;;;;;;;;;;1807:277;;;;;;1788:296;;1650:441;;;:::o;1038:312::-;1244:7;1291:6;1299:7;1308;1317:6;1325:9;1336:5;1280:62;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1270:73;;;;;;1263:80;;1038:312;;;;;;;;:::o;2558:626::-;2795:148;;;;;;9712:25:69;;;2735:4:21;9753:18:69;;;9746:34;;;2735:4:21;;9685:18:69;;2795:148:21;;;;;;;;;;;;;2772:181;;2795:148;2772:181;;;;3042:22;;;4759:25:69;;;2772:181:21;-1:-1:-1;2983:194:21;;4732:18:69;3042:22:21;;;;;;;;;;2983:194;;;;;;;;;;3042:22;2983:194;;;3042:22;3107:16;3141:22;2983:41;:194::i;:::-;2964:213;;;2558:626;;;;;;:::o;1219:1309:15:-;1400:4;1406:12;1466:15;1491:13;1514:24;1551:8;1541:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1541:19:15;;1514:46;;2062:1;2033;1996:9;1990:16;1958:4;1947:9;1943:20;1904:6;1866:7;1837:4;1815:272;1803:284;;2154:16;2143:27;;2198:8;2189:7;2186:21;2183:76;;;2237:8;2226:19;;2183:76;2344:7;2331:11;2324:28;2464:7;2461:1;2454:4;2441:11;2437:22;2422:50;2499:8;;;;-1:-1:-1;1219:1309:15;-1:-1:-1;;;;;;;1219:1309:15:o;993:318:25:-;1160:14;1186:16;1205:19;1219:4;1205:13;:19::i;:::-;1186:38;;1241:63;1277:3;1282:6;1290;1298:5;1241:35;:63::i;:::-;1234:70;993:318;-1:-1:-1;;;;;;993:318:25:o;2191:146::-;2255:23;2324:4;2314:15;;;;;;2297:33;;;;;;10102:19:69;;10146:2;10137:12;;9973:182;2297:33:25;;;;;;;;;;;;;2290:40;;2191:146;;;:::o;2498:325:24:-;2665:14;2692:11;2705:18;2727:24;2731:4;2737:6;2745:5;2727:3;:24::i;:::-;2691:60;;;;2770:6;:45;;;;;2780:35;2801:6;2809:5;2780:20;:35::i;:::-;2762:54;2498:325;-1:-1:-1;;;;;;;2498:325:24:o;3181:617::-;3302:12;3316:19;3347:23;3373:19;3385:6;3373:11;:19::i;:::-;3347:45;;3403:18;3423:25;3450:16;3470:79;3497:5;3516:4;3534:5;3470:13;:79::i;:::-;3574:19;;3402:147;;-1:-1:-1;3402:147:24;;-1:-1:-1;3402:147:24;-1:-1:-1;3574:24:24;;;3617:21;;;3627:11;3617:21;3609:60;;;;;;;10362:2:69;3609:60:24;;;10344:21:69;10401:2;10381:18;;;10374:30;10440:28;10420:18;;;10413:56;10486:18;;3609:60:24;10160:350:69;3609:60:24;3680:18;3701:6;:57;;3749:9;;;;;;;;;;;;3701:57;;;3710:36;3724:5;3730:14;3743:1;3730:10;:14;:::i;:::-;3724:21;;;;;;;;:::i;:::-;;;;;;;3710:13;:36::i;:::-;3777:6;;;;-1:-1:-1;3181:617:24;;-1:-1:-1;;;;;;;;;3181:617:24:o;4422:148:16:-;4502:4;4556:6;4546:17;;;;;;4535:6;4525:17;;;;;;:38;4518:45;;4422:148;;;;;:::o;9377:495:24:-;9441:25;9478:36;9517:30;9540:6;9517:22;:30::i;:::-;9478:69;;9557:23;9598:5;:12;9583:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9583:28:24;;;;;;;;;;;;;;;;9557:54;;9627:9;9622:221;9646:5;:12;9642:1;:16;9622:221;;;9679:20;9702:33;9726:5;9732:1;9726:8;;;;;;;;:::i;:::-;;;;;;;9702:23;:33::i;:::-;9679:56;;9760:72;;;;;;;;9780:7;9760:72;;;;9798:31;9821:7;9798:22;:31::i;:::-;9760:72;;;9749:5;9755:1;9749:8;;;;;;;;:::i;:::-;;;;;;:83;;;;9665:178;9660:3;;;;;:::i;:::-;;;;9622:221;;;-1:-1:-1;9860:5:24;9377:495;-1:-1:-1;;;9377:495:24:o;4295:4872::-;4467:19;4500:26;4467:19;;;4633:30;4658:4;4633:24;:30::i;:::-;4614:49;;4674:21;4698:5;4674:29;;4713:23;4750:27;4791;-1:-1:-1;;;;;;;;;;;;;;;;;;;4791:27:24;4905:9;4900:4050;4924:6;:13;4920:1;:17;4900:4050;;;4972:6;4979:1;4972:9;;;;;;;;:::i;:::-;;;;;;;4958:23;;5014:19;4995:38;;;;;:::i;:::-;;-1:-1:-1;5196:15:24;5210:1;5196:15;;:::i;:::-;;-1:-1:-1;5230:20:24;5226:758;;5352:19;;5342:30;;;;;;;:47;;5334:77;;;;;;;11236:2:69;5334:77:24;;;11218:21:69;11275:2;11255:18;;;11248:30;11314:19;11294:18;;;11287:47;11351:18;;5334:77:24;11034:341:69;5334:77:24;5226:758;;;5436:19;;:26;5466:2;-1:-1:-1;5432:552:24;;5603:19;;5593:30;;;;;;;:47;;5564:145;;;;;;;11582:2:69;5564:145:24;;;11564:21:69;11621:2;11601:18;;;11594:30;11660:29;11640:18;;;11633:57;11707:18;;5564:145:24;11380:351:69;5432:552:24;5888:13;5839:45;5864:11;:19;;;5839:24;:45::i;:::-;:62;5810:159;;;;;;;11938:2:69;5810:159:24;;;11920:21:69;11977:2;11957:18;;;11950:30;12016:28;11996:18;;;11989:56;12062:18;;5810:159:24;11736:350:69;5810:159:24;880:14;756:2;893:1;880:14;:::i;:::-;6002:11;:19;;;:26;:48;5998:2942;;;6093:3;:10;6074:15;:29;6070:666;;;6255:5;;6070:666;6447:15;6471:3;6475:15;6471:20;;;;;;;;:::i;:::-;;;;;;;;;6465:27;;6447:45;;6514:37;6554:11;:19;;;6574:9;6554:30;;;;;;;;;;:::i;:::-;;;;;;;6514:70;;6622:20;6633:8;6622:10;:20::i;:::-;6606:36;;6686:1;6664:23;;6709:8;;;;5998:2942;1037:1;6760:11;:19;;;:26;:59;6756:2184;;;6839:17;6859:25;6872:11;6859:12;:25::i;:::-;6839:45;;6902:12;6923:4;6928:1;6923:7;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;6949:12:24;6969:10;6978:1;6923:7;6969:10;:::i;:::-;6964:16;;:1;:16;:::i;:::-;6949:31;;6998:26;7027:34;7048:4;7054:6;7027:34;;:20;:34::i;:::-;6998:63;;7079:25;7107:42;7128:3;7133:15;7107:20;:42::i;:::-;7079:70;;7167:26;7196:51;7219:13;7234:12;7196:22;:51::i;:::-;7167:80;-1:-1:-1;7270:26:24;;;1557:1;7270:26;;:55;;-1:-1:-1;7300:25:24;;;1597:1;7300:25;7270:55;7266:1582;;;7402:18;7378:13;:20;:42;:111;;;;;7471:18;7448:12;:19;:41;7378:111;7349:415;;;7704:37;7723:18;7704:37;;:::i;:::-;;;7349:415;-1:-1:-1;1695:12:24;;-1:-1:-1;7920:5:24;;-1:-1:-1;;;;;7920:5:24;7266:1582;7954:31;;;;;:65;;-1:-1:-1;7989:30:24;;;1516:1;7989:30;7954:65;7950:898;;;8069:13;:20;8047:18;:42;8043:692;;-1:-1:-1;1695:12:24;;-1:-1:-1;8386:5:24;;-1:-1:-1;;;;;8386:5:24;8043:692;8578:34;8589:11;:19;;;8609:1;8589:22;;;;;;;;:::i;:::-;;;;;;;8578:10;:34::i;:::-;8562:50;-1:-1:-1;8660:18:24;-1:-1:-1;8704:8:24;;-1:-1:-1;;;;;8704:8:24;7950:898;8781:48;;;;;12844:2:69;8781:48:24;;;12826:21:69;12883:2;12863:18;;;12856:30;12922:34;12902:18;;;12895:62;12993:8;12973:18;;;12966:36;13019:19;;8781:48:24;12642:402:69;6756:2184:24;8886:39;;;;;13251:2:69;8886:39:24;;;13233:21:69;13290:2;13270:18;;;13263:30;13329:31;13309:18;;;13302:59;13378:18;;8886:39:24;13049:353:69;6756:2184:24;4939:3;;;;:::i;:::-;;;;4900:4050;;;-1:-1:-1;1695:12:24;9040:34;;9092:10;9104:42;9125:3;9130:15;9104:20;:42::i;:::-;9084:76;;;;-1:-1:-1;9148:11:24;;-1:-1:-1;4295:4872:24;-1:-1:-1;;;;;;;;;;4295:4872:24:o;11172:177::-;11302:13;;;;11316:20;;11240:19;;11278:64;;11316:24;;11339:1;;11316:24;:::i;:::-;11302:39;;;;;;;;:::i;2730:125:22:-;-1:-1:-1;;;;;;;;;;;;;;;;;972:41:22;;;;;;;;990:10;;972:41;;933:12;;;972:41;;;;2789:16;;2824:24;;:8;:24::i;2986:313::-;3048:12;3073:18;3093;3113:20;3137:18;3151:3;3137:13;:18::i;:::-;3072:83;;-1:-1:-1;3072:83:22;-1:-1:-1;3072:83:22;-1:-1:-1;3186:21:22;3174:8;:33;;;;;;;;:::i;:::-;;3166:70;;;;;;;13798:2:69;3166:70:22;;;13780:21:69;13837:2;13817:18;;;13810:30;13876:26;13856:18;;;13849:54;13920:18;;3166:70:22;13596:348:69;3166:70:22;3254:38;3260:3;:7;;;3269:10;3281;3254:5;:38::i;:::-;3247:45;2986:313;-1:-1:-1;;;;;2986:313:22:o;3775:344:16:-;3838:12;3862:20;3895:6;:13;3911:1;3895:17;;;;:::i;:::-;3885:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3885:28:16;;3862:51;;3929:9;3924:164;3948:6;:13;3944:1;:17;3924:164;;;4012:1;3999:6;4006:1;3999:9;;;;;;;;:::i;:::-;;;;;;;:14;;3982:7;3990:5;:1;3994;3990:5;:::i;:::-;3982:14;;;;;;;;:::i;:::-;;;;:31;;;;;;;;;;;4074:2;4061:6;4068:1;4061:9;;;;;;;;:::i;:::-;;;;;4055:21;;;4061:9;;4055:21;:::i;:::-;4048:29;;4027:7;4035:5;:1;4039;4035:5;:::i;:::-;:9;;4043:1;4035:9;:::i;:::-;4027:18;;;;;;;;:::i;:::-;;;;:50;;;;;;;;;;-1:-1:-1;3963:3:16;;;;:::i;:::-;;;;3924:164;;;-1:-1:-1;4105:7:16;3775:344;-1:-1:-1;;3775:344:16:o;3295:346::-;3358:7;3397:2;3381:6;:13;:18;3377:167;;;-1:-1:-1;3492:2:16;3480:15;3474:22;;3295:346::o;3377:167::-;3572:6;3561:29;;;;;;;;;;;;:::i;10184:463:24:-;10262:15;10289:19;10338:2;10323:5;:12;;;:17;10319:272;;;10425:33;10452:5;10425:26;:33::i;:::-;10416:42;;10319:272;;;10550:30;10574:5;10550:23;:30::i;:::-;10541:39;;10319:272;10608:32;10633:6;10608:24;:32::i;10838:178::-;10905:18;10942:67;10967:41;10991:5;:13;;;11005:1;10991:16;;;;;;;;:::i;10967:41::-;10942:24;:67::i;3051:238:16:-;3126:12;3164:6;:13;3154:6;:23;3150:70;;-1:-1:-1;3200:9:16;;;;;;;;;-1:-1:-1;3200:9:16;;3193:16;;3150:70;3237:45;3243:6;3251;3275;3259;:13;:22;;;;:::i;:::-;3237:5;:45::i;11593:275:24:-;11705:15;;11759:85;11778:1;11766:2;:9;:13;:30;;;;;11795:1;11783:2;:9;:13;11766:30;:48;;;;;11809:2;11812:1;11809:5;;;;;;;;:::i;:::-;;;;;;;;;11800:14;;;:2;11803:1;11800:5;;;;;;;;:::i;:::-;;;;;;;:14;11766:48;11759:85;;;11830:3;;;;:::i;:::-;;;;11759:85;;1172:1406:22;1233:16;1262:18;1284:20;1308:18;1322:3;1308:13;:18::i;:::-;1261:65;;-1:-1:-1;1261:65:22;;-1:-1:-1;1357:21:22;;-1:-1:-1;1345:8:22;:33;;;;;;;;:::i;:::-;;1337:69;;;;;;;14573:2:69;1337:69:22;;;14555:21:69;14612:2;14592:18;;;14585:30;14651:25;14631:18;;;14624:53;14694:18;;1337:69:22;14371:347:69;1337:69:22;1832:30;;;295:2;1832:30;;;;;;;;;1809:20;;1832:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1832:30:22;;;;;;;;;;;;;;-1:-1:-1;1809:53:22;-1:-1:-1;1873:17:22;1921:10;1941:478;1957:10;;1948:19;;1941:478;;;295:2;1991:9;:27;1983:82;;;;;;;14925:2:69;1983:82:22;;;14907:21:69;14964:2;14944:18;;;14937:30;15003:34;14983:18;;;14976:62;15074:12;15054:18;;;15047:40;15104:19;;1983:82:22;14723:406:69;1983:82:22;2081:18;2101;2125:108;2156:63;;;;;;;;2187:6;2174:3;:10;;;:19;;;;:::i;:::-;2156:63;;;;2210:6;2200:3;:7;;;:16;;;;:::i;:::-;2156:63;;2125:13;:108::i;:::-;2080:153;;;;;2265:67;;;;;;;;2296:10;2283;:23;;;;:::i;:::-;2265:67;;;;2323:6;2313:3;:7;;;:16;;;;:::i;:::-;2265:67;;;2248:3;2252:9;2248:14;;;;;;;;:::i;:::-;;;;;;;;;;:84;2347:14;2360:1;2347:14;;:::i;:::-;;-1:-1:-1;2385:23:22;2398:10;2385;:23;:::i;:::-;2375:33;;;;:::i;:::-;;;1969:450;;1941:478;;;-1:-1:-1;2519:22:22;;2526:3;1172:1406;-1:-1:-1;;;;1172:1406:22:o;7649:2148::-;7751:7;7772;7793:11;7850:1;7837:3;:10;;;:14;7829:51;;;;;;;15336:2:69;7829:51:22;;;15318:21:69;15375:2;15355:18;;;15348:30;15414:26;15394:18;;;15387:54;15458:18;;7829:51:22;15134:348:69;7829:51:22;7905:7;;;;7987:10;;7891:11;7979:19;8032:4;8022:14;;8018:1773;;8089:1;8092;8095:21;8081:36;;;;;;;;;;8018:1773;8148:4;8138:6;:14;8134:1657;;8254:14;8271:13;8280:4;8271:6;:13;:::i;:::-;8254:30;;8320:6;8307:3;:10;;;:19;8299:57;;;;;;;15689:2:69;8299:57:22;;;15671:21:69;15728:2;15708:18;;;15701:30;15767:27;15747:18;;;15740:55;15812:18;;8299:57:22;15487:349:69;8299:57:22;8379:1;;-1:-1:-1;8382:6:22;-1:-1:-1;8390:21:22;;-1:-1:-1;8371:41:22;;-1:-1:-1;;8371:41:22;8134:1657;8443:4;8433:6;:14;8429:1362;;8491:19;8513:13;8522:4;8513:6;:13;:::i;:::-;8491:35;;8562:11;8549:3;:10;;;:24;8541:68;;;;;;;16043:2:69;8541:68:22;;;16025:21:69;16082:2;16062:18;;;16055:30;16121:33;16101:18;;;16094:61;16172:18;;8541:68:22;15841:355:69;8541:68:22;8755:1;8746:11;;8740:18;8773:2;8769:20;;;8764:3;8760:30;8736:55;;8840:20;8736:55;8777:11;8840:20;:::i;:::-;8827:10;;:33;8819:70;;;;;;;16403:2:69;8819:70:22;;;16385:21:69;16442:2;16422:18;;;16415:30;16481:26;16461:18;;;16454:54;16525:18;;8819:70:22;16201:348:69;8819:70:22;8912:15;8916:11;8912:1;:15;:::i;:::-;8904:55;-1:-1:-1;8929:6:22;-1:-1:-1;8937:21:22;;-1:-1:-1;8904:55:22;;-1:-1:-1;;;8904:55:22;8429:1362;8990:4;8980:6;:14;8976:815;;9093:15;9111:13;9120:4;9111:6;:13;:::i;:::-;9093:31;;9160:7;9147:3;:10;;;:20;9139:56;;;;;;;16756:2:69;9139:56:22;;;16738:21:69;16795:2;16775:18;;;16768:30;16834:25;16814:18;;;16807:53;16877:18;;9139:56:22;16554:347:69;9139:56:22;9218:1;;-1:-1:-1;9221:7:22;-1:-1:-1;9218:1:22;;-1:-1:-1;9210:42:22;;-1:-1:-1;;9210:42:22;8976:815;9309:20;9332:13;9341:4;9332:6;:13;:::i;:::-;9309:36;;9381:12;9368:3;:10;;;:25;9360:67;;;;;;;17108:2:69;9360:67:22;;;17090:21:69;17147:2;17127:18;;;17120:30;17186:31;17166:18;;;17159:59;17235:18;;9360:67:22;16906:353:69;9360:67:22;9573:1;9564:11;;9558:18;9591:2;9587:21;;;9582:3;9578:31;9554:56;;9659:22;9554:56;9595:12;9659:22;:::i;:::-;9646:10;;:35;9638:70;;;;;;;17466:2:69;9638:70:22;;;17448:21:69;17505:2;17485:18;;;17478:30;17544:24;17524:18;;;17517:52;17586:18;;9638:70:22;17264:346:69;9638:70:22;9731:16;9735:12;9731:1;:16;:::i;:::-;9723:57;-1:-1:-1;9749:7:22;-1:-1:-1;9758:21:22;;-1:-1:-1;9723:57:22;;-1:-1:-1;;;9723:57:22;7649:2148;;;;;;:::o;10052:892::-;10167:12;10191:16;10220:7;10210:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10210:18:22;;10191:37;;10242:3;:10;10256:1;10242:15;10238:56;;;10280:3;-1:-1:-1;10273:10:22;;10238:56;10304:11;10318:14;10325:7;10318:4;:14;:::i;:::-;10304:28;-1:-1:-1;10404:2:22;10395:12;;10342;10482:180;10506:12;10516:2;10506:7;:12;:::i;:::-;10502:1;:16;10482:180;;;10579:10;;10566:24;;10618:9;10625:2;10585:3;10618:9;:::i;:::-;;-1:-1:-1;10641:10:22;10649:2;10641:10;;:::i;:::-;;-1:-1:-1;10520:3:22;;;;:::i;:::-;;;;10482:180;;;-1:-1:-1;10713:12:22;10795:1;10788:2;10778:7;:12;10772:2;:19;10766:3;:26;:30;10759:37;;10901:4;10894;10888:11;10884:22;10876:4;10872:9;10866:3;10860:10;10856:26;10853:54;10847:4;10840:68;10934:3;10927:10;;;;;;10052:892;;;;;:::o;7210:113::-;7275:12;7306:10;7312:3;7306:5;:10::i;205:2840:16:-;327:12;375:7;359:12;375:7;369:2;359:12;:::i;:::-;:23;;351:50;;;;;;;17942:2:69;351:50:16;;;17924:21:69;17981:2;17961:18;;;17954:30;18020:16;18000:18;;;17993:44;18054:18;;351:50:16;17740:338:69;351:50:16;439:6;419:16;428:7;439:6;419:16;:::i;:::-;:26;;411:53;;;;;;;17942:2:69;411:53:16;;;17924:21:69;17981:2;17961:18;;;17954:30;18020:16;18000:18;;;17993:44;18054:18;;411:53:16;17740:338:69;411:53:16;499:16;508:7;499:6;:16;:::i;:::-;482:6;:13;:33;;474:63;;;;;;;18285:2:69;474:63:16;;;18267:21:69;18324:2;18304:18;;;18297:30;18363:19;18343:18;;;18336:47;18400:18;;474:63:16;18083:341:69;474:63:16;548:22;611:15;;639:1967;;;;2747:4;2741:11;2728:24;;2934:1;2923:9;2916:20;2982:4;2971:9;2967:20;2961:4;2954:34;604:2398;;639:1967;821:4;815:11;802:24;;1480:2;1471:7;1467:16;1862:9;1855:17;1849:4;1845:28;1833:9;1822;1818:25;1814:60;1910:7;1906:2;1902:16;2162:6;2148:9;2141:17;2135:4;2131:28;2119:9;2111:6;2107:22;2103:57;2099:70;1936:425;2195:3;2191:2;2188:11;1936:425;;;2333:9;;2322:21;;2236:4;2228:13;;;;2268;1936:425;;;-1:-1:-1;;2379:26:16;;;2587:2;2570:11;2583:7;2566:25;2560:4;2553:39;-1:-1:-1;604:2398:16;-1:-1:-1;3029:9:16;205:2840;-1:-1:-1;;;;205:2840:16:o;11069:124:22:-;11126:12;11157:29;11163:3;:7;;;11172:1;11175:3;:10;;;11157:5;:29::i;498:180:69:-;557:6;610:2;598:9;589:7;585:23;581:32;578:52;;;626:1;623;616:12;578:52;-1:-1:-1;649:23:69;;498:180;-1:-1:-1;498:180:69:o;875:196::-;943:20;;1003:42;992:54;;982:65;;972:93;;1061:1;1058;1051:12;972:93;875:196;;;:::o;1076:184::-;1128:77;1125:1;1118:88;1225:4;1222:1;1215:15;1249:4;1246:1;1239:15;1265:334;1336:2;1330:9;1392:2;1382:13;;1397:66;1378:86;1366:99;;1495:18;1480:34;;1516:22;;;1477:62;1474:88;;;1542:18;;:::i;:::-;1578:2;1571:22;1265:334;;-1:-1:-1;1265:334:69:o;1604:1291::-;1704:6;1712;1720;1728;1736;1789:3;1777:9;1768:7;1764:23;1760:33;1757:53;;;1806:1;1803;1796:12;1757:53;1829:29;1848:9;1829:29;:::i;:::-;1819:39;;1877:2;1926;1915:9;1911:18;1898:32;1888:42;;1980:2;1969:9;1965:18;1952:32;2003:18;2061:2;2054:5;2050:14;2043:5;2040:25;2030:53;;2079:1;2076;2069:12;2030:53;2102:5;;-1:-1:-1;2159:2:69;2144:18;;2131:32;;2201:15;;2194:23;2182:36;;2172:64;;2232:1;2229;2222:12;2172:64;2255:7;;-1:-1:-1;2313:3:69;2298:19;;2285:33;;2330:14;;;2327:34;;;2357:1;2354;2347:12;2327:34;2395:6;2384:9;2380:22;2370:32;;2440:7;2433:4;2429:2;2425:13;2421:27;2411:55;;2462:1;2459;2452:12;2411:55;2498:2;2485:16;2520:2;2516;2513:10;2510:36;;;2526:18;;:::i;:::-;2568:112;2676:2;2607:66;2600:4;2596:2;2592:13;2588:86;2584:95;2568:112;:::i;:::-;2555:125;;2703:2;2696:5;2689:17;2743:7;2738:2;2733;2729;2725:11;2721:20;2718:33;2715:53;;;2764:1;2761;2754:12;2715:53;2819:2;2814;2810;2806:11;2801:2;2794:5;2790:14;2777:45;2863:1;2858:2;2853;2846:5;2842:14;2838:23;2831:34;;2884:5;2874:15;;;;;1604:1291;;;;;;;;:::o;2900:347::-;2951:8;2961:6;3015:3;3008:4;3000:6;2996:17;2992:27;2982:55;;3033:1;3030;3023:12;2982:55;-1:-1:-1;3056:20:69;;3099:18;3088:30;;3085:50;;;3131:1;3128;3121:12;3085:50;3168:4;3160:6;3156:17;3144:29;;3220:3;3213:4;3204:6;3196;3192:19;3188:30;3185:39;3182:59;;;3237:1;3234;3227:12;3182:59;2900:347;;;;;:::o;3252:1356::-;3440:6;3448;3456;3464;3472;3480;3488;3496;3504;3512;3520:7;3574:3;3562:9;3553:7;3549:23;3545:33;3542:53;;;3591:1;3588;3581:12;3542:53;3627:9;3614:23;3604:33;;3656:38;3690:2;3679:9;3675:18;3656:38;:::i;:::-;3646:48;;3713:38;3747:2;3736:9;3732:18;3713:38;:::i;:::-;3703:48;;3798:2;3787:9;3783:18;3770:32;3760:42;;3849:3;3838:9;3834:19;3821:33;3811:43;;3904:18;3897:3;3886:9;3882:19;3869:33;3866:57;3863:77;;;3936:1;3933;3926:12;3863:77;3975:85;4052:7;4044:3;4033:9;4029:19;4016:33;4005:9;4001:49;3975:85;:::i;:::-;4079:8;;-1:-1:-1;4106:8:69;-1:-1:-1;4161:3:69;4146:19;;4133:33;;-1:-1:-1;4280:3:69;4186:23;;;4211:66;4182:96;4178:106;4175:126;;;4297:1;4294;4287:12;4175:126;4335:3;4324:9;4320:19;4310:29;;4389:18;4382:3;4371:9;4367:19;4354:33;4351:57;4348:77;;;4421:1;4418;4411:12;4348:77;4461:85;4538:7;4530:3;4519:9;4515:19;4502:33;4491:9;4487:49;4461:85;:::i;:::-;4565:8;4555:18;;4593:9;4582:20;;;;3252:1356;;;;;;;;;;;;;;:::o;4795:530::-;4836:3;4874:5;4868:12;4901:6;4896:3;4889:19;4926:1;4936:162;4950:6;4947:1;4944:13;4936:162;;;5012:4;5068:13;;;5064:22;;5058:29;5040:11;;;5036:20;;5029:59;4965:12;4936:162;;;5116:6;5113:1;5110:13;5107:87;;;5182:1;5175:4;5166:6;5161:3;5157:16;5153:27;5146:38;5107:87;-1:-1:-1;5239:2:69;5227:15;5244:66;5223:88;5214:98;;;;5314:4;5210:109;;4795:530;-1:-1:-1;;4795:530:69:o;5330:537::-;5581:6;5570:9;5563:25;5624:6;5619:2;5608:9;5604:18;5597:34;5679:18;5671:6;5667:31;5662:2;5651:9;5647:18;5640:59;5749:6;5742:14;5735:22;5730:2;5719:9;5715:18;5708:50;5795:3;5789;5778:9;5774:19;5767:32;5544:4;5816:45;5856:3;5845:9;5841:19;5833:6;5816:45;:::i;6229:507::-;6330:6;6383:2;6371:9;6362:7;6358:23;6354:32;6351:52;;;6399:1;6396;6389:12;6351:52;6432:2;6426:9;6474:2;6466:6;6462:15;6543:6;6531:10;6528:22;6507:18;6495:10;6492:34;6489:62;6486:88;;;6554:18;;:::i;:::-;6590:2;6583:22;6629:16;;6614:32;;6700:2;6685:18;;;6679:25;6662:15;;;6655:50;;;;-1:-1:-1;6621:6:69;6229:507;-1:-1:-1;6229:507:69:o;6741:184::-;6793:77;6790:1;6783:88;6890:4;6887:1;6880:15;6914:4;6911:1;6904:15;6930:128;6970:3;7001:1;6997:6;6994:1;6991:13;6988:39;;;7007:18;;:::i;:::-;-1:-1:-1;7043:9:69;;6930:128::o;7422:646::-;7514:6;7567:3;7555:9;7546:7;7542:23;7538:33;7535:53;;;7584:1;7581;7574:12;7535:53;7617:2;7611:9;7659:3;7651:6;7647:16;7729:6;7717:10;7714:22;7693:18;7681:10;7678:34;7675:62;7672:88;;;7740:18;;:::i;:::-;7780:10;7776:2;7769:22;;7828:9;7815:23;7807:6;7800:39;7900:2;7889:9;7885:18;7872:32;7867:2;7859:6;7855:15;7848:57;7966:2;7955:9;7951:18;7938:32;7933:2;7925:6;7921:15;7914:57;8032:2;8021:9;8017:18;8004:32;7999:2;7991:6;7987:15;7980:57;8056:6;8046:16;;;7422:646;;;;:::o;8878:655::-;9165:6;9154:9;9147:25;9128:4;9191:42;9281:2;9273:6;9269:15;9264:2;9253:9;9249:18;9242:43;9333:2;9325:6;9321:15;9316:2;9305:9;9301:18;9294:43;;9373:6;9368:2;9357:9;9353:18;9346:34;9417:6;9411:3;9400:9;9396:19;9389:35;9461:3;9455;9444:9;9440:19;9433:32;9482:45;9522:3;9511:9;9507:19;9499:6;9482:45;:::i;:::-;9474:53;8878:655;-1:-1:-1;;;;;;;;8878:655:69:o;10515:125::-;10555:4;10583:1;10580;10577:8;10574:34;;;10588:18;;:::i;:::-;-1:-1:-1;10625:9:69;;10515:125::o;10645:184::-;10697:77;10694:1;10687:88;10794:4;10791:1;10784:15;10818:4;10815:1;10808:15;10834:195;10873:3;10904:66;10897:5;10894:77;10891:103;;;10974:18;;:::i;:::-;-1:-1:-1;11021:1:69;11010:13;;10834:195::o;12091:184::-;12143:77;12140:1;12133:88;12240:4;12237:1;12230:15;12264:4;12261:1;12254:15;12280:157;12310:1;12344:4;12341:1;12337:12;12368:3;12358:37;;12375:18;;:::i;:::-;12427:3;12420:4;12417:1;12413:12;12409:22;12404:27;;;12280:157;;;;:::o;12442:195::-;12480:4;12517;12514:1;12510:12;12549:4;12546:1;12542:12;12574:3;12569;12566:12;12563:38;;;12581:18;;:::i;:::-;12618:13;;;12442:195;-1:-1:-1;;;12442:195:69:o;13407:184::-;13459:77;13456:1;13449:88;13556:4;13553:1;13546:15;13580:4;13577:1;13570:15;13949:228;13989:7;14115:1;14047:66;14043:74;14040:1;14037:81;14032:1;14025:9;14018:17;14014:105;14011:131;;;14122:18;;:::i;:::-;-1:-1:-1;14162:9:69;;13949:228::o;14182:184::-;14252:6;14305:2;14293:9;14284:7;14280:23;14276:32;14273:52;;;14321:1;14318;14311:12;14273:52;-1:-1:-1;14344:16:69;;14182:184;-1:-1:-1;14182:184:69:o;17615:120::-;17655:1;17681;17671:35;;17686:18;;:::i;:::-;-1:-1:-1;17720:9:69;;17615:120::o",
    "linkReferences": {},
    "immutableReferences": {
      "765": [
        {
          "start": 407,
          "length": 32
        },
        {
          "start": 1008,
          "length": 32
        }
      ],
      "769": [
        {
          "start": 166,
          "length": 32
        },
        {
          "start": 877,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FINALIZATION_PERIOD()": "ff61cc93",
    "L2_ORACLE()": "001c2ff6",
    "depositTransaction(address,uint256,uint64,bool,bytes)": "e9e05c42",
    "finalizeWithdrawalTransaction(uint256,address,address,uint256,uint256,bytes,uint256,(bytes32,bytes32,bytes32,bytes32),bytes)": "eecf1c36",
    "finalizedWithdrawals(bytes32)": "a14238e7",
    "l2Sender()": "9bf62d82"
  },
  "ast": {
    "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol",
    "id": 1017,
    "exportedSymbols": {
      "AddressAliasHelper": [
        2206
      ],
      "ExcessivelySafeCall": [
        2246
      ],
      "L2OutputOracle": [
        711
      ],
      "OptimismPortal": [
        1016
      ],
      "WithdrawalVerifier": [
        3183
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:8265:3",
    "nodes": [
      {
        "id": 713,
        "nodeType": "PragmaDirective",
        "src": "31:23:3",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 715,
        "nodeType": "ImportDirective",
        "src": "56:54:3",
        "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol",
        "file": "./L2OutputOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1017,
        "sourceUnit": 712,
        "symbolAliases": [
          {
            "foreign": {
              "id": 714,
              "name": "L2OutputOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:14:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 717,
        "nodeType": "ImportDirective",
        "src": "111:77:3",
        "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/libraries/Lib_WithdrawalVerifier.sol",
        "file": "../libraries/Lib_WithdrawalVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1017,
        "sourceUnit": 3184,
        "symbolAliases": [
          {
            "foreign": {
              "id": 716,
              "name": "WithdrawalVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "120:18:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 719,
        "nodeType": "ImportDirective",
        "src": "189:73:3",
        "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/libraries/AddressAliasHelper.sol",
        "file": "../libraries/AddressAliasHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1017,
        "sourceUnit": 2207,
        "symbolAliases": [
          {
            "foreign": {
              "id": 718,
              "name": "AddressAliasHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "198:18:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 721,
        "nodeType": "ImportDirective",
        "src": "263:75:3",
        "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/libraries/ExcessivelySafeCall.sol",
        "file": "../libraries/ExcessivelySafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1017,
        "sourceUnit": 2247,
        "symbolAliases": [
          {
            "foreign": {
              "id": 720,
              "name": "ExcessivelySafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "272:19:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1016,
        "nodeType": "ContractDefinition",
        "src": "437:7858:3",
        "nodes": [
          {
            "id": 725,
            "nodeType": "ErrorDefinition",
            "src": "601:31:3",
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "517:79:3",
              "text": " @notice Error emitted when the output root proof is invalid."
            },
            "name": "InvalidOutputRootProof",
            "nameLocation": "607:22:3",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:2:3"
            }
          },
          {
            "id": 728,
            "nodeType": "ErrorDefinition",
            "src": "731:40:3",
            "documentation": {
              "id": 726,
              "nodeType": "StructuredDocumentation",
              "src": "638:88:3",
              "text": " @notice Error emitted when the withdrawal inclusion proof is invalid."
            },
            "name": "InvalidWithdrawalInclusionProof",
            "nameLocation": "737:31:3",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:2:3"
            }
          },
          {
            "id": 731,
            "nodeType": "ErrorDefinition",
            "src": "868:35:3",
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "777:86:3",
              "text": " @notice Error emitted when a withdrawal has already been finalized."
            },
            "name": "WithdrawalAlreadyFinalized",
            "nameLocation": "874:26:3",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:3"
            }
          },
          {
            "id": 734,
            "nodeType": "ErrorDefinition",
            "src": "1018:30:3",
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "909:104:3",
              "text": " @notice Error emitted on deposits which create a new contract with a non-zero target."
            },
            "name": "NonZeroCreationTarget",
            "nameLocation": "1024:21:3",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:2:3"
            }
          },
          {
            "id": 751,
            "nodeType": "EventDefinition",
            "src": "1301:206:3",
            "anonymous": false,
            "documentation": {
              "id": 735,
              "nodeType": "StructuredDocumentation",
              "src": "1104:192:3",
              "text": " @notice Emitted when a Transaction is deposited from L1 to L2. The parameters of this\n event are read by the rollup node and used to derive deposit transactions on L2."
            },
            "name": "TransactionDeposited",
            "nameLocation": "1307:20:3",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1353:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1337:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1383:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1367:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mint",
                  "nameLocation": "1403:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1395:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1425:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1417:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "1447:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1440:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isCreation",
                  "nameLocation": "1470:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1465:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1496:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "1490:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:179:3"
            }
          },
          {
            "id": 758,
            "nodeType": "EventDefinition",
            "src": "1583:57:3",
            "anonymous": false,
            "documentation": {
              "id": 752,
              "nodeType": "StructuredDocumentation",
              "src": "1513:65:3",
              "text": " @notice Emitted when a withdrawal is finalized"
            },
            "name": "WithdrawalFinalized",
            "nameLocation": "1589:19:3",
            "parameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1609:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1631:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1626:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1608:31:3"
            }
          },
          {
            "id": 762,
            "nodeType": "VariableDeclaration",
            "src": "1818:88:3",
            "constant": true,
            "documentation": {
              "id": 759,
              "nodeType": "StructuredDocumentation",
              "src": "1705:108:3",
              "text": " @notice Value used to reset the l2Sender, this is more efficient than setting it to zero."
            },
            "mutability": "constant",
            "name": "DEFAULT_L2_SENDER",
            "nameLocation": "1844:17:3",
            "scope": 1016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 760,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1818:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
              "id": 761,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1864:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x000000000000000000000000000000000000dEaD"
            },
            "visibility": "internal"
          },
          {
            "id": 765,
            "nodeType": "VariableDeclaration",
            "src": "2071:44:3",
            "constant": false,
            "documentation": {
              "id": 763,
              "nodeType": "StructuredDocumentation",
              "src": "1972:94:3",
              "text": " @notice Minimum time that must elapse before a withdrawal can be finalized."
            },
            "functionSelector": "ff61cc93",
            "mutability": "immutable",
            "name": "FINALIZATION_PERIOD",
            "nameLocation": "2096:19:3",
            "scope": 1016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 764,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2071:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 769,
            "nodeType": "VariableDeclaration",
            "src": "2184:41:3",
            "constant": false,
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "2122:57:3",
              "text": " @notice Address of the L2OutputOracle."
            },
            "functionSelector": "001c2ff6",
            "mutability": "immutable",
            "name": "L2_ORACLE",
            "nameLocation": "2216:9:3",
            "scope": 1016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_L2OutputOracle_$711",
              "typeString": "contract L2OutputOracle"
            },
            "typeName": {
              "id": 768,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 767,
                "name": "L2OutputOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 711,
                "src": "2184:14:3"
              },
              "referencedDeclaration": 711,
              "src": "2184:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                "typeString": "contract L2OutputOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 773,
            "nodeType": "VariableDeclaration",
            "src": "2504:43:3",
            "constant": false,
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "2232:267:3",
              "text": " @notice Public variable which can be used to read the address of the L2 account which\n initated the withdrawal. Can also be used to determine whether or not execution is occuring\n downstream of a call to finalizeWithdrawalTransaction()."
            },
            "functionSelector": "9bf62d82",
            "mutability": "mutable",
            "name": "l2Sender",
            "nameLocation": "2519:8:3",
            "scope": 1016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 771,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2504:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "id": 772,
              "name": "DEFAULT_L2_SENDER",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 762,
              "src": "2530:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 778,
            "nodeType": "VariableDeclaration",
            "src": "2688:52:3",
            "constant": false,
            "documentation": {
              "id": 774,
              "nodeType": "StructuredDocumentation",
              "src": "2554:129:3",
              "text": " @notice A list of withdrawal hashes which have been successfully finalized.\n Used for replay protection."
            },
            "functionSelector": "a14238e7",
            "mutability": "mutable",
            "name": "finalizedWithdrawals",
            "nameLocation": "2720:20:3",
            "scope": 1016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 777,
              "keyType": {
                "id": 775,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2696:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2688:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 776,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2707:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 795,
            "nodeType": "FunctionDefinition",
            "src": "2812:156:3",
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "2879:89:3",
              "statements": [
                {
                  "expression": {
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 786,
                      "name": "L2_ORACLE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "2889:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                        "typeString": "contract L2OutputOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 787,
                      "name": "_l2Oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "2901:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                        "typeString": "contract L2OutputOracle"
                      }
                    },
                    "src": "2889:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:21:3"
                },
                {
                  "expression": {
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 790,
                      "name": "FINALIZATION_PERIOD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "2920:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 791,
                      "name": "_finalizationPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "2942:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2920:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:41:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "_l2Oracle",
                  "nameLocation": "2839:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "2824:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                    "typeString": "contract L2OutputOracle"
                  },
                  "typeName": {
                    "id": 780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 779,
                      "name": "L2OutputOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 711,
                      "src": "2824:14:3"
                    },
                    "referencedDeclaration": 711,
                    "src": "2824:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "_finalizationPeriod",
                  "nameLocation": "2858:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "2850:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:55:3"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2879:0:3"
            },
            "scope": 1016,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 813,
            "nodeType": "FunctionDefinition",
            "src": "3353:111:3",
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "3380:84:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3409:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3409:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 802,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3421:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3421:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030303030",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3432:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3440:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3453:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3447:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 806,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3447:5:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3447:9:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 799,
                      "name": "depositTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "3390:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint64_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint64,bool,bytes memory)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:67:3"
                }
              ]
            },
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "3054:294:3",
              "text": " @notice Accepts value so that users can send ETH directly to this contract and\n have the funds be deposited to their address on L2.\n @dev This is intended as a convenience function for EOAs. Contracts should call the\n depositTransaction() function directly."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3360:2:3"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:0:3"
            },
            "scope": 1016,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 872,
            "nodeType": "FunctionDefinition",
            "src": "3903:703:3",
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "4077:529:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 827,
                      "name": "_isCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "4181:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 828,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "4196:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4211:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4203:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 829,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4203:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4203:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4196:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4181:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 839,
                  "nodeType": "IfStatement",
                  "src": "4177:93:3",
                  "trueBody": {
                    "id": 838,
                    "nodeType": "Block",
                    "src": "4215:55:3",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 835,
                            "name": "NonZeroCreationTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "4236:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4236:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 837,
                        "nodeType": "RevertStatement",
                        "src": "4229:30:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 841,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4288:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 871,
                      "src": "4280:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 840,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4280:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "expression": {
                      "id": 842,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4295:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4295:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4280:25:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 845,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4399:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4399:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 847,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "4413:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "4413:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4399:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 859,
                  "nodeType": "IfStatement",
                  "src": "4395:108:3",
                  "trueBody": {
                    "id": 858,
                    "nodeType": "Block",
                    "src": "4424:79:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 850,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "4438:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 853,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4481:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4481:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 851,
                                "name": "AddressAliasHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2206,
                                "src": "4445:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AddressAliasHelper_$2206_$",
                                  "typeString": "type(library AddressAliasHelper)"
                                }
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "applyL1ToL2Alias",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2183,
                              "src": "4445:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) pure returns (address)"
                              }
                            },
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4445:47:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4438:54:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "4438:54:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 861,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "4539:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 862,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "4545:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 863,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4550:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4550:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 865,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "4561:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 866,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "4569:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 867,
                        "name": "_isCreation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "4580:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 868,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "4593:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 860,
                      "name": "TransactionDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "4518:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint64_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint64,bool,bytes memory)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4518:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "EmitStatement",
                  "src": "4513:86:3"
                }
              ]
            },
            "documentation": {
              "id": 814,
              "nodeType": "StructuredDocumentation",
              "src": "3470:428:3",
              "text": " @notice Accepts deposits of ETH and data, and emits a TransactionDeposited event for use in\n deriving deposit transactions.\n @param _to The L2 destination address.\n @param _value The ETH value to send in the deposit transaction.\n @param _gasLimit The L2 gasLimit.\n @param _isCreation Whether or not the transaction should be contract creation.\n @param _data The input data."
            },
            "functionSelector": "e9e05c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTransaction",
            "nameLocation": "3912:18:3",
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3948:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "3940:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3969:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "3961:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3961:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "3992:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "3985:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3985:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "_isCreation",
                  "nameLocation": "4016:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "4011:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4050:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "4037:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4037:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3930:131:3"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4077:0:3"
            },
            "scope": 1016,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1015,
            "nodeType": "FunctionDefinition",
            "src": "5231:3062:3",
            "body": {
              "id": 1014,
              "nodeType": "Block",
              "src": "5589:2704:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 896,
                          "name": "_target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "5637:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 899,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5656:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismPortal_$1016",
                                "typeString": "contract OptimismPortal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimismPortal_$1016",
                                "typeString": "contract OptimismPortal"
                              }
                            ],
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5648:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 897,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5648:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5648:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5637:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742073656e64206d65737361676520746f2073656c662e",
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5663:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d5e054dc5f3525cd3c6edbee257ce295f93891300477552dfe411f79952c8a5",
                          "typeString": "literal_string \"Cannot send message to self.\""
                        },
                        "value": "Cannot send message to self."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d5e054dc5f3525cd3c6edbee257ce295f93891300477552dfe411f79952c8a5",
                          "typeString": "literal_string \"Cannot send message to self.\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5629:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5629:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "5629:65:3"
                },
                {
                  "assignments": [
                    909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 909,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "5774:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1014,
                      "src": "5737:45:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OutputProposal_$465_memory_ptr",
                        "typeString": "struct L2OutputOracle.OutputProposal"
                      },
                      "typeName": {
                        "id": 908,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 907,
                          "name": "L2OutputOracle.OutputProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 465,
                          "src": "5737:29:3"
                        },
                        "referencedDeclaration": 465,
                        "src": "5737:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OutputProposal_$465_storage_ptr",
                          "typeString": "struct L2OutputOracle.OutputProposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 914,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 912,
                        "name": "_l2Timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "5807:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 910,
                        "name": "L2_ORACLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "5785:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$711",
                          "typeString": "contract L2OutputOracle"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getL2Output",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 683,
                      "src": "5785:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$465_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct L2OutputOracle.OutputProposal memory)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5785:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OutputProposal_$465_memory_ptr",
                      "typeString": "struct L2OutputOracle.OutputProposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5737:83:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 916,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6055:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6055:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 918,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "6073:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputProposal_$465_memory_ptr",
                                "typeString": "struct L2OutputOracle.OutputProposal memory"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 464,
                            "src": "6073:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 920,
                            "name": "FINALIZATION_PERIOD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "6094:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6073:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6055:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c206973206e6f74207965742066696e616c697a65642e",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6127:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eceffe8cb1ef2306f7ad9a585d073b1d8c1ef60e86b8c587184b9d410e6ec56c",
                          "typeString": "literal_string \"Proposal is not yet finalized.\""
                        },
                        "value": "Proposal is not yet finalized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eceffe8cb1ef2306f7ad9a585d073b1d8c1ef60e86b8c587184b9d410e6ec56c",
                          "typeString": "literal_string \"Proposal is not yet finalized.\""
                        }
                      ],
                      "id": 915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6034:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6034:135:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "6034:135:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 926,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "6272:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OutputProposal_$465_memory_ptr",
                          "typeString": "struct L2OutputOracle.OutputProposal memory"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "outputRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "6272:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 930,
                          "name": "_outputRootProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "6332:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OutputRootProof_$3090_calldata_ptr",
                            "typeString": "struct WithdrawalVerifier.OutputRootProof calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OutputRootProof_$3090_calldata_ptr",
                            "typeString": "struct WithdrawalVerifier.OutputRootProof calldata"
                          }
                        ],
                        "expression": {
                          "id": 928,
                          "name": "WithdrawalVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3183,
                          "src": "6295:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_WithdrawalVerifier_$3183_$",
                            "typeString": "type(library WithdrawalVerifier)"
                          }
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_deriveOutputRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3145,
                        "src": "6295:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_OutputRootProof_$3090_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (struct WithdrawalVerifier.OutputRootProof memory) pure returns (bytes32)"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6295:54:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6272:77:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 937,
                  "nodeType": "IfStatement",
                  "src": "6268:139:3",
                  "trueBody": {
                    "id": 936,
                    "nodeType": "Block",
                    "src": "6351:56:3",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 933,
                            "name": "InvalidOutputRootProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "6372:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6372:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 935,
                        "nodeType": "RevertStatement",
                        "src": "6365:31:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 939,
                      "mutability": "mutable",
                      "name": "withdrawalHash",
                      "nameLocation": "6571:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1014,
                      "src": "6563:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 938,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6563:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 942,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "6635:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 943,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "6655:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 944,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "6676:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 945,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "6697:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 946,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "6717:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 947,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "6740:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 940,
                        "name": "WithdrawalVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "6588:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WithdrawalVerifier_$3183_$",
                          "typeString": "type(library WithdrawalVerifier)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawalHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3121,
                      "src": "6588:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6588:167:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6563:192:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 952,
                          "name": "withdrawalHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "6907:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 953,
                            "name": "_outputRootProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "6939:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OutputRootProof_$3090_calldata_ptr",
                              "typeString": "struct WithdrawalVerifier.OutputRootProof calldata"
                            }
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawerStorageRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3087,
                          "src": "6939:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 955,
                          "name": "_withdrawalProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "6995:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 950,
                          "name": "WithdrawalVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3183,
                          "src": "6844:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_WithdrawalVerifier_$3183_$",
                            "typeString": "type(library WithdrawalVerifier)"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_verifyWithdrawalInclusion",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3182,
                        "src": "6844:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (bytes32,bytes32,bytes memory) pure returns (bool)"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6844:181:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7029:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6844:190:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 963,
                  "nodeType": "IfStatement",
                  "src": "6827:283:3",
                  "trueBody": {
                    "id": 962,
                    "nodeType": "Block",
                    "src": "7045:65:3",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 959,
                            "name": "InvalidWithdrawalInclusionProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "7066:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7066:33:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 961,
                        "nodeType": "RevertStatement",
                        "src": "7059:40:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 964,
                        "name": "finalizedWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "7194:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 966,
                      "indexExpression": {
                        "id": 965,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "7215:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7194:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7234:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7194:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 973,
                  "nodeType": "IfStatement",
                  "src": "7190:110:3",
                  "trueBody": {
                    "id": 972,
                    "nodeType": "Block",
                    "src": "7240:60:3",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 969,
                            "name": "WithdrawalAlreadyFinalized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "7261:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7261:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 971,
                        "nodeType": "RevertStatement",
                        "src": "7254:35:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 974,
                        "name": "finalizedWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "7353:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 976,
                      "indexExpression": {
                        "id": 975,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "7374:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7353:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7392:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7353:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "7353:43:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 981,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "7488:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7488:9:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 983,
                            "name": "_gasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "7501:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3230303030",
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7513:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000_by_1",
                              "typeString": "int_const 20000"
                            },
                            "value": "20000"
                          },
                          "src": "7501:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7488:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742067617320746f2066696e616c697a65207769746864726177616c2e",
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7520:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba348536a32a1ef41603749c27932f981e7c227ae954a8bcccf783a7bc708e7",
                          "typeString": "literal_string \"Insufficient gas to finalize withdrawal.\""
                        },
                        "value": "Insufficient gas to finalize withdrawal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba348536a32a1ef41603749c27932f981e7c227ae954a8bcccf783a7bc708e7",
                          "typeString": "literal_string \"Insufficient gas to finalize withdrawal.\""
                        }
                      ],
                      "id": 980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7480:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7480:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "7480:83:3"
                },
                {
                  "expression": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 990,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "7691:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 991,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "7702:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7691:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "7691:18:3"
                },
                {
                  "assignments": [
                    995,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 995,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7844:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1014,
                      "src": "7839:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 994,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7839:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1004,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 998,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "7910:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 999,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "7931:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1000,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "7954:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7974:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1002,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "7989:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 996,
                        "name": "ExcessivelySafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "7857:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ExcessivelySafeCall_$2246_$",
                          "typeString": "type(library ExcessivelySafeCall)"
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "excessivelySafeCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2245,
                      "src": "7857:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,uint256,uint256,uint16,bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7857:147:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7838:166:3"
                },
                {
                  "expression": {
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1005,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "8055:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1006,
                      "name": "DEFAULT_L2_SENDER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "8066:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8055:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "8055:28:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1010,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "8262:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1011,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "8278:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1009,
                      "name": "WithdrawalFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "8242:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8242:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1013,
                  "nodeType": "EmitStatement",
                  "src": "8237:49:3"
                }
              ]
            },
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "4612:614:3",
              "text": " @notice Finalizes a withdrawal transaction.\n @param _nonce Nonce for the provided message.\n @param _sender Message sender address on L2.\n @param _target Target address on L1.\n @param _value ETH to send to the target.\n @param _gasLimit Gas to be forwarded to the target.\n @param _data Data to send to the target.\n @param _l2Timestamp L2 timestamp of the outputRoot.\n @param _outputRootProof Inclusion proof of the withdrawer contracts storage root.\n @param _withdrawalProof Inclusion proof for the given withdrawal in the withdrawer contract."
            },
            "functionSelector": "eecf1c36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeWithdrawalTransaction",
            "nameLocation": "5240:29:3",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "5287:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5279:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5279:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "5311:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5303:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5303:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "5336:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5328:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5328:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5361:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5353:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5353:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "5385:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5377:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5377:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5419:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5404:20:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5404:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "_l2Timestamp",
                  "nameLocation": "5442:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5434:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5434:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_outputRootProof",
                  "nameLocation": "5508:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5464:60:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OutputRootProof_$3090_calldata_ptr",
                    "typeString": "struct WithdrawalVerifier.OutputRootProof"
                  },
                  "typeName": {
                    "id": 889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 888,
                      "name": "WithdrawalVerifier.OutputRootProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3090,
                      "src": "5464:34:3"
                    },
                    "referencedDeclaration": 3090,
                    "src": "5464:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OutputRootProof_$3090_storage_ptr",
                      "typeString": "struct WithdrawalVerifier.OutputRootProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_withdrawalProof",
                  "nameLocation": "5549:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "5534:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5269:302:3"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5589:0:3"
            },
            "scope": 1016,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OptimismPortal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 722,
          "nodeType": "StructuredDocumentation",
          "src": "340:96:3",
          "text": " @title OptimismPortal\n This contract should be deployed behind an upgradable proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1016
        ],
        "name": "OptimismPortal",
        "nameLocation": "446:14:3",
        "scope": 1017,
        "usedErrors": [
          725,
          728,
          731,
          734
        ]
      }
    ],
    "license": "MIT"
  }
}