/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptimismPortal,
  OptimismPortalInterface,
} from "../OptimismPortal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract L2OutputOracle",
        name: "_l2Oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_finalizationPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOutputRootProof",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWithdrawalInclusionProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NonZeroCreationTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalAlreadyFinalized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "gasLimit",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isCreation",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TransactionDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "WithdrawalFinalized",
    type: "event",
  },
  {
    inputs: [],
    name: "FINALIZATION_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "L2_ORACLE",
    outputs: [
      {
        internalType: "contract L2OutputOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_gasLimit",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_isCreation",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositTransaction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_l2Timestamp",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "version",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "withdrawerStorageRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "latestBlockhash",
            type: "bytes32",
          },
        ],
        internalType: "struct WithdrawalVerifier.OutputRootProof",
        name: "_outputRootProof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_withdrawalProof",
        type: "bytes",
      },
    ],
    name: "finalizeWithdrawalTransaction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "finalizedWithdrawals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052600080546001600160a01b03191661dead17905534801561002457600080fd5b506040516200230d3803806200230d8339810160408190526100459161005b565b6001600160a01b0390911660a052608052610095565b6000806040838503121561006e57600080fd5b82516001600160a01b038116811461008557600080fd5b6020939093015192949293505050565b60805160a051612245620000c86000396000818160a6015261035301526000818161019701526103d601526122456000f3fe6080604052600436106100685760003560e01c8063e9e05c4211610043578063e9e05c421461015f578063eecf1c3614610172578063ff61cc931461018557600080fd5b80621c2ff6146100945780639bf62d82146100f2578063a14238e71461011f57600080fd5b3661008f5761008d3334620186a06000604051806020016040528060008152506101c7565b005b600080fd5b3480156100a057600080fd5b506100c87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100fe57600080fd5b506000546100c89073ffffffffffffffffffffffffffffffffffffffff1681565b34801561012b57600080fd5b5061014f61013a366004611bde565b60016020526000908152604090205460ff1681565b60405190151581526020016100e9565b61008d61016d366004611c80565b6101c7565b61008d610180366004611dac565b6102b6565b34801561019157600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e9565b8180156101e9575073ffffffffffffffffffffffffffffffffffffffff851615155b15610220576040517ff98844ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33328114610241575033731111000000000000000000000000000000001111015b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f78231ae6eb73366f912bb1d64351601fb76344c537bbab635ce14d0f376f019534888888886040516102a6959493929190611ef9565b60405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff89163014156103215760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742073656e64206d65737361676520746f2073656c662e0000000060448201526064015b60405180910390fd5b6040517fa25ae557000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a25ae557906024016040805180830381865afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190611f30565b90507f000000000000000000000000000000000000000000000000000000000000000081602001516104049190611fae565b42116104525760405162461bcd60e51b815260206004820152601e60248201527f50726f706f73616c206973206e6f74207965742066696e616c697a65642e00006044820152606401610318565b61046961046436869003860186611fc6565b610772565b8151146104a2576040517f9cc00b5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006104e88d8d8d8d8d8d8d8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107ce92505050565b905061052f81866040013586868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061080d92505050565b610565576040517feb00eb2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602081905260409091205460ff16151514156105b4576040517fae89945400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556105fa89614e20611fae565b5a101561066f5760405162461bcd60e51b815260206004820152602860248201527f496e73756666696369656e742067617320746f2066696e616c697a652077697460448201527f6864726177616c2e0000000000000000000000000000000000000000000000006064820152608401610318565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8e16178155604080516020601f8b018190048102820181019092528981526106f4918e918d918f9186918f908f908190840183828082843760009201919091525061089a92505050565b50600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560405190915082907fdb5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b9061075a90841515815260200190565b60405180910390a25050505050505050505050505050565b600081600001518260200151836040015184606001516040516020016107b1949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60008686868686866040516020016107eb9695949392919061202c565b6040516020818303038152906040528051906020012090509695505050505050565b60408051602081018590526000918101829052819060600160408051601f198184030181528282528051602091820120908301819052925061088f910160408051601f19818403018152828201909152600182527f01000000000000000000000000000000000000000000000000000000000000006020830152908587610925565b9150505b9392505050565b6000606060008060008661ffff1667ffffffffffffffff8111156108c0576108c0611c20565b6040519080825280601f01601f1916602001820160405280156108ea576020820181803683370190505b5090506000808751602089018b8e8ef191503d92508683111561090b578692505b828152826000602083013e90999098509650505050505050565b60008061093186610949565b905061093f8186868661097b565b9695505050505050565b6060818051906020012060405160200161096591815260200190565b6040516020818303038152906040529050919050565b600080600061098b8786866109ac565b915091508180156109a157506109a18682610a87565b979650505050505050565b6000606060006109bb85610aa3565b905060008060006109cd848a89610b9e565b815192955090935091501580806109e15750815b610a2d5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e0000000000006044820152606401610318565b600081610a495760405180602001604052806000815250610a75565b610a7586610a58600188612083565b81518110610a6857610a6861209a565b6020026020010151611039565b919b919a509098505050505050505050565b6000818051906020012083805190602001201490505b92915050565b60606000610ab083611063565b90506000815167ffffffffffffffff811115610ace57610ace611c20565b604051908082528060200260200182016040528015610b1357816020015b6040805180820190915260608082526020820152815260200190600190039081610aec5790505b50905060005b8251811015610b96576000610b46848381518110610b3957610b3961209a565b6020026020010151611096565b90506040518060400160405280828152602001610b6283611063565b815250838381518110610b7757610b7761209a565b6020026020010181905250508080610b8e906120c9565b915050610b19565b509392505050565b60006060818080610bae87611126565b90506000869050600080610bd5604051806040016040528060608152602001606081525090565b60005b8c51811015610ff5578c8181518110610bf357610bf361209a565b602002602001015191508284610c099190611fae565b9350610c16600188611fae565b965083610c7a57815180516020909101208514610c755760405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726f6f7420686173680000000000000000000000000000006044820152606401610318565b610d37565b815151602011610cdc57815180516020909101208514610c755760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c206861736800000000006044820152606401610318565b84610cea83600001516112a9565b14610d375760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f646520686173680000000000006044820152606401610318565b610d4360106001611fae565b8260200151511415610dbc578551841415610d5d57610ff5565b6000868581518110610d7157610d7161209a565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110610d9c57610d9c61209a565b60200260200101519050610daf816112d1565b9650600194505050610fe3565b60028260200151511415610f9b576000610dd583611307565b9050600081600081518110610dec57610dec61209a565b016020015160f81c90506000610e03600283612131565b610e0e906002612153565b90506000610e1f848360ff1661132b565b90506000610e2d8b8a61132b565b90506000610e3b8383611361565b905060ff851660021480610e52575060ff85166003145b15610ea857808351148015610e675750808251145b15610e7957610e76818b611fae565b99505b507f80000000000000000000000000000000000000000000000000000000000000009950610ff5945050505050565b60ff85161580610ebb575060ff85166001145b15610f2d5782518114610ef757507f80000000000000000000000000000000000000000000000000000000000000009950610ff5945050505050565b610f1e8860200151600181518110610f1157610f1161209a565b60200260200101516112d1565b9a509750610fe3945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e2060448201527f70726566697800000000000000000000000000000000000000000000000000006064820152608401610318565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e0000006044820152606401610318565b80610fed816120c9565b915050610bd8565b507f8000000000000000000000000000000000000000000000000000000000000000841486611024878661132b565b909e909d50909b509950505050505050505050565b60208101518051606091610a9d9161105390600190612083565b81518110610b3957610b3961209a565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a9d9061140d565b606060008060006110a68561160c565b9194509250905060008160018111156110c1576110c1612176565b1461110e5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e00000000000000006044820152606401610318565b61111d8560200151848461195d565b95945050505050565b606060008251600261113891906121a5565b67ffffffffffffffff81111561115057611150611c20565b6040519080825280601f01601f19166020018201604052801561117a576020820181803683370190505b50905060005b83518110156112a257600484828151811061119d5761119d61209a565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c826111d28360026121a5565b815181106111e2576111e261209a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060108482815181106112255761122561209a565b0160200151611237919060f81c612131565b60f81b826112468360026121a5565b611251906001611fae565b815181106112615761126161209a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061129a816120c9565b915050611180565b5092915050565b60006020825110156112bd57506020015190565b81806020019051810190610a9d91906121e2565b600060606020836000015110156112f2576112eb83611a3c565b90506112fe565b6112fb83611096565b90505b610893816112a9565b6060610a9d6113268360200151600081518110610b3957610b3961209a565b611126565b60608251821061134a5750604080516020810190915260008152610a9d565b610893838384865161135c9190612083565b611a47565b6000805b8084511180156113755750808351115b80156113f6575082818151811061138e5761138e61209a565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106113cd576113cd61209a565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016145b156108935780611405816120c9565b915050611365565b606060008061141b8461160c565b9193509091506001905081600181111561143757611437612176565b146114845760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401610318565b6040805160208082526104208201909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161149d5790505090506000835b865181101561160157602082106115495760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201527f7374206c656e6774682e000000000000000000000000000000000000000000006064820152608401610318565b6000806115866040518060400160405280858c6000015161156a9190612083565b8152602001858c6020015161157f9190611fae565b905261160c565b5091509150604051806040016040528083836115a29190611fae565b8152602001848b602001516115b79190611fae565b8152508585815181106115cc576115cc61209a565b60209081029190910101526115e2600185611fae565b93506115ee8183611fae565b6115f89084611fae565b925050506114ca565b508152949350505050565b6000806000808460000151116116645760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e00000000000000006044820152606401610318565b6020840151805160001a607f8111611689576000600160009450945094505050611956565b60b7811161170557600061169e608083612083565b9050808760000151116116f35760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401610318565b60019550935060009250611956915050565b60bf81116117f457600061171a60b783612083565b90508087600001511161176f5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e006044820152606401610318565b600183015160208290036101000a90046117898183611fae565b8851116117d85760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401610318565b6117e3826001611fae565b965094506000935061195692505050565b60f7811161186f57600061180960c083612083565b90508087600001511161185e5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e0000000000000000006044820152606401610318565b600195509350849250611956915050565b600061187c60f783612083565b9050808760000151116118d15760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e0000006044820152606401610318565b600183015160208290036101000a90046118eb8183611fae565b88511161193a5760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420524c50206c6f6e67206c6973742e000000000000000000006044820152606401610318565b611945826001611fae565b965094506001935061195692505050565b9193909250565b606060008267ffffffffffffffff81111561197a5761197a611c20565b6040519080825280601f01601f1916602001820160405280156119a4576020820181803683370190505b5090508051600014156119b8579050610893565b60006119c48587611fae565b90506020820160005b6119d86020876121fb565b811015611a0f57825182526119ee602084611fae565b92506119fb602083611fae565b915080611a07816120c9565b9150506119cd565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a9d82611bc8565b606081611a5581601f611fae565b1015611aa35760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610318565b82611aae8382611fae565b1015611afc5760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610318565b611b068284611fae565b84511015611b565760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610318565b606082158015611b755760405191506000825260208201604052611bbf565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611bae578051835260209283019201611b96565b5050858452601f01601f1916604052505b50949350505050565b6060610a9d82602001516000846000015161195d565b600060208284031215611bf057600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c1b57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c7857611c78611c20565b604052919050565b600080600080600060a08688031215611c9857600080fd5b611ca186611bf7565b94506020808701359450604087013567ffffffffffffffff8082168214611cc757600080fd5b9094506060880135908115158214611cde57600080fd5b90935060808801359080821115611cf457600080fd5b818901915089601f830112611d0857600080fd5b813581811115611d1a57611d1a611c20565b611d2c84601f19601f84011601611c4f565b91508082528a84828501011115611d4257600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60008083601f840112611d7557600080fd5b50813567ffffffffffffffff811115611d8d57600080fd5b602083019150836020828501011115611da557600080fd5b9250929050565b60008060008060008060008060008060006101808c8e031215611dce57600080fd5b8b359a50611dde60208d01611bf7565b9950611dec60408d01611bf7565b985060608c0135975060808c0135965067ffffffffffffffff60a08d01351115611e1557600080fd5b611e258d60a08e01358e01611d63565b909650945060c08c0135935060808c8e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20011215611e6357600080fd5b60e08c01925067ffffffffffffffff6101608d01351115611e8357600080fd5b611e948d6101608e01358e01611d63565b81935080925050509295989b509295989b9093969950565b6000815180845260005b81811015611ed257602081850181015186830182015201611eb6565b81811115611ee4576000602083870101525b50601f01601f19169290920160200192915050565b85815284602082015267ffffffffffffffff84166040820152821515606082015260a0608082015260006109a160a0830184611eac565b600060408284031215611f4257600080fd5b6040516040810181811067ffffffffffffffff82111715611f6557611f65611c20565b604052825181526020928301519281019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611fc157611fc1611f7f565b500190565b600060808284031215611fd857600080fd5b6040516080810181811067ffffffffffffffff82111715611ffb57611ffb611c20565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261207760c0830184611eac565b98975050505050505050565b60008282101561209557612095611f7f565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120fb576120fb611f7f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060ff83168061214457612144612102565b8060ff84160691505092915050565b600060ff821660ff84168082101561216d5761216d611f7f565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121dd576121dd611f7f565b500290565b6000602082840312156121f457600080fd5b5051919050565b60008261220a5761220a612102565b50049056fea26469706673582212203fc7d2652ba87e3788aee40fd87319de604d06a95ac00deb5c39ec7d92e756b464736f6c634300080a0033";

export class OptimismPortal__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _l2Oracle: string,
    _finalizationPeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptimismPortal> {
    return super.deploy(
      _l2Oracle,
      _finalizationPeriod,
      overrides || {}
    ) as Promise<OptimismPortal>;
  }
  getDeployTransaction(
    _l2Oracle: string,
    _finalizationPeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _l2Oracle,
      _finalizationPeriod,
      overrides || {}
    );
  }
  attach(address: string): OptimismPortal {
    return super.attach(address) as OptimismPortal;
  }
  connect(signer: Signer): OptimismPortal__factory {
    return super.connect(signer) as OptimismPortal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismPortalInterface {
    return new utils.Interface(_abi) as OptimismPortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismPortal {
    return new Contract(address, _abi, signerOrProvider) as OptimismPortal;
  }
}
