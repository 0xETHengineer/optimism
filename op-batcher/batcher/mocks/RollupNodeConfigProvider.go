// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	eth "github.com/ethereum-optimism/optimism/op-node/eth"
	mock "github.com/stretchr/testify/mock"
)

// RollupNodeConfigProvider is an autogenerated mock type for the RollupNodeConfigProvider type
type RollupNodeConfigProvider struct {
	mock.Mock
}

// SyncStatus provides a mock function with given fields: ctx
func (_m *RollupNodeConfigProvider) SyncStatus(ctx context.Context) (*eth.SyncStatus, error) {
	ret := _m.Called(ctx)

	var r0 *eth.SyncStatus
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*eth.SyncStatus, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *eth.SyncStatus); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*eth.SyncStatus)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRollupNodeConfigProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewRollupNodeConfigProvider creates a new instance of RollupNodeConfigProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRollupNodeConfigProvider(t mockConstructorTestingTNewRollupNodeConfigProvider) *RollupNodeConfigProvider {
	mock := &RollupNodeConfigProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
