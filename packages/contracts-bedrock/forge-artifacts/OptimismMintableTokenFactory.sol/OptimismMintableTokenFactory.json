{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        }
      ],
      "name": "OptimismMintableTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        }
      ],
      "name": "StandardL2TokenCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createStandardL2Token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611bba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063896f93d114610046578063c4d66de814610082578063e78cea9214610097575b600080fd5b61005961005436600461049e565b6100b7565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b610095610090366004610512565b6102c7565b005b6000546100599073ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff841661013b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d7573742070726f76696465204c3120746f6b656e206164647265737300000060448201526064015b60405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff166101ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d75737420696e697469616c697a6520666972737400000000000000000000006044820152606401610132565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116908690869086906101e99061038e565b6101f6949392919061059f565b604051809103906000f080158015610212573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fceeb8e7d520d7f3b65fc11a262b91066940193b05d4f93df07cfdced0eb551cf60405160405180910390a360405133815273ffffffffffffffffffffffffffffffffffffffff80831691908716907f72cbd08b640f0b122f70b68afaa96313a92e9d8f216385cef230260a3983da9d9060200160405180910390a3949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1615610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f416c726561647920696e697469616c697a65642e0000000000000000000000006044820152606401610132565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6115b8806105f683390190565b803573ffffffffffffffffffffffffffffffffffffffff811681146103bf57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261040457600080fd5b813567ffffffffffffffff8082111561041f5761041f6103c4565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610465576104656103c4565b8160405283815286602085880101111561047e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156104b357600080fd5b6104bc8461039b565b9250602084013567ffffffffffffffff808211156104d957600080fd5b6104e5878388016103f3565b935060408601359150808211156104fb57600080fd5b50610508868287016103f3565b9150509250925092565b60006020828403121561052457600080fd5b61052d8261039b565b9392505050565b6000815180845260005b8181101561055a5760208185018101518683018201520161053e565b8181111561056c576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250608060408301526105d86080830185610534565b82810360608401526105ea8185610534565b97965050505050505056fe60806040523480156200001157600080fd5b50604051620015b8380380620015b883398101604081905262000034916200022f565b8151829082906200004d9060039060208501906200009f565b508051620000639060049060208401906200009f565b5050600580546001600160a01b039586166001600160a01b031991821617909155600680549690951695169490941790925550620002fc915050565b828054620000ad90620002bf565b90600052602060002090601f016020900481019282620000d157600085556200011c565b82601f10620000ec57805160ff19168380011785556200011c565b828001600101855582156200011c579182015b828111156200011c578251825591602001919060010190620000ff565b506200012a9291506200012e565b5090565b5b808211156200012a57600081556001016200012f565b80516001600160a01b03811681146200015d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018a57600080fd5b81516001600160401b0380821115620001a757620001a762000162565b604051601f8301601f19908116603f01168101908282118183101715620001d257620001d262000162565b81604052838152602092508683858801011115620001ef57600080fd5b600091505b83821015620002135785820183015181830184015290820190620001f4565b83821115620002255760008385830101525b9695505050505050565b600080600080608085870312156200024657600080fd5b620002518562000145565b9350620002616020860162000145565b60408601519093506001600160401b03808211156200027f57600080fd5b6200028d8883890162000178565b93506060870151915080821115620002a457600080fd5b50620002b38782880162000178565b91505092959194509250565b600181811c90821680620002d457607f821691505b60208210811415620002f657634e487b7160e01b600052602260045260246000fd5b50919050565b6112ac806200030c6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806395d89b41116100b2578063ae1f6aaf11610081578063d6c0b2c411610066578063d6c0b2c4146102bb578063dd62ed3e146102db578063e78cea921461032157600080fd5b8063ae1f6aaf1461025e578063c01e1bd61461029d57600080fd5b806395d89b411461021d5780639dc29fac14610225578063a457c2d714610238578063a9059cbb1461024b57600080fd5b806323b872dd1161010957806339509351116100ee57806339509351146101bf57806340c10f19146101d257806370a08231146101e757600080fd5b806323b872dd1461019d578063313ce567146101b057600080fd5b806301ffc9a71461013b57806306fdde0314610163578063095ea7b31461017857806318160ddd1461018b575b600080fd5b61014e610149366004611054565b610341565b60405190151581526020015b60405180910390f35b61016b610452565b60405161015a919061109d565b61014e610186366004611139565b6104e4565b6002545b60405190815260200161015a565b61014e6101ab366004611163565b6104fc565b6040516012815260200161015a565b61014e6101cd366004611139565b610520565b6101e56101e0366004611139565b61056c565b005b61018f6101f536600461119f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61016b610650565b6101e5610233366004611139565b61065f565b61014e610246366004611139565b610732565b61014e610259366004611139565b610803565b60065473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b60055473ffffffffffffffffffffffffffffffffffffffff16610278565b6005546102789073ffffffffffffffffffffffffffffffffffffffff1681565b61018f6102e93660046111ba565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6006546102789073ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27f1d1d8b63000000000000000000000000000000000000000000000000000000007f0bc32271000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000085167f01ffc9a700000000000000000000000000000000000000000000000000000000148061041a57507fffffffff00000000000000000000000000000000000000000000000000000000858116908216145b8061044957507fffffffff00000000000000000000000000000000000000000000000000000000858116908316145b95945050505050565b606060038054610461906111ed565b80601f016020809104026020016040519081016040528092919081815260200182805461048d906111ed565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b5050505050905090565b6000336104f2818585610811565b5060019392505050565b60003361050a8582856109c5565b610515858585610a9c565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104f29082908690610567908790611270565b610811565b60065473ffffffffffffffffffffffffffffffffffffffff1633146105f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064015b60405180910390fd5b6105fc8282610d4f565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161064491815260200190565b60405180910390a25050565b606060048054610461906111ed565b60065473ffffffffffffffffffffffffffffffffffffffff1633146106e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064016105e9565b6106ea8282610e6f565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161064491815260200190565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016105e9565b6105158286868403610811565b6000336104f2818585610a9c565b73ffffffffffffffffffffffffffffffffffffffff83166108b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff8216610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a965781811015610a89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105e9565b610a968484848403610811565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff8216610be2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610c98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610cdc908490611270565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d4291815260200190565b60405180910390a3610a96565b73ffffffffffffffffffffffffffffffffffffffff8216610dcc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e9565b8060026000828254610dde9190611270565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610e18908490611270565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610fc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290611004908490611288565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109b8565b60006020828403121561106657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461109657600080fd5b9392505050565b600060208083528351808285015260005b818110156110ca578581018301518582016040015282016110ae565b818111156110dc576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461113457600080fd5b919050565b6000806040838503121561114c57600080fd5b61115583611110565b946020939093013593505050565b60008060006060848603121561117857600080fd5b61118184611110565b925061118f60208501611110565b9150604084013590509250925092565b6000602082840312156111b157600080fd5b61109682611110565b600080604083850312156111cd57600080fd5b6111d683611110565b91506111e460208401611110565b90509250929050565b600181811c9082168061120157607f821691505b6020821081141561123b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561128357611283611241565b500190565b60008282101561129a5761129a611241565b50039056fea164736f6c634300080a000aa164736f6c634300080a000a",
    "sourceMap": "835:1553:46:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063896f93d114610046578063c4d66de814610082578063e78cea9214610097575b600080fd5b61005961005436600461049e565b6100b7565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b610095610090366004610512565b6102c7565b005b6000546100599073ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff841661013b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d7573742070726f76696465204c3120746f6b656e206164647265737300000060448201526064015b60405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff166101ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d75737420696e697469616c697a6520666972737400000000000000000000006044820152606401610132565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116908690869086906101e99061038e565b6101f6949392919061059f565b604051809103906000f080158015610212573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fceeb8e7d520d7f3b65fc11a262b91066940193b05d4f93df07cfdced0eb551cf60405160405180910390a360405133815273ffffffffffffffffffffffffffffffffffffffff80831691908716907f72cbd08b640f0b122f70b68afaa96313a92e9d8f216385cef230260a3983da9d9060200160405180910390a3949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1615610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f416c726561647920696e697469616c697a65642e0000000000000000000000006044820152606401610132565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6115b8806105f683390190565b803573ffffffffffffffffffffffffffffffffffffffff811681146103bf57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261040457600080fd5b813567ffffffffffffffff8082111561041f5761041f6103c4565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610465576104656103c4565b8160405283815286602085880101111561047e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156104b357600080fd5b6104bc8461039b565b9250602084013567ffffffffffffffff808211156104d957600080fd5b6104e5878388016103f3565b935060408601359150808211156104fb57600080fd5b50610508868287016103f3565b9150509250925092565b60006020828403121561052457600080fd5b61052d8261039b565b9392505050565b6000815180845260005b8181101561055a5760208185018101518683018201520161053e565b8181111561056c576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250608060408301526105d86080830185610534565b82810360608401526105ea8185610534565b97965050505050505056fe60806040523480156200001157600080fd5b50604051620015b8380380620015b883398101604081905262000034916200022f565b8151829082906200004d9060039060208501906200009f565b508051620000639060049060208401906200009f565b5050600580546001600160a01b039586166001600160a01b031991821617909155600680549690951695169490941790925550620002fc915050565b828054620000ad90620002bf565b90600052602060002090601f016020900481019282620000d157600085556200011c565b82601f10620000ec57805160ff19168380011785556200011c565b828001600101855582156200011c579182015b828111156200011c578251825591602001919060010190620000ff565b506200012a9291506200012e565b5090565b5b808211156200012a57600081556001016200012f565b80516001600160a01b03811681146200015d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018a57600080fd5b81516001600160401b0380821115620001a757620001a762000162565b604051601f8301601f19908116603f01168101908282118183101715620001d257620001d262000162565b81604052838152602092508683858801011115620001ef57600080fd5b600091505b83821015620002135785820183015181830184015290820190620001f4565b83821115620002255760008385830101525b9695505050505050565b600080600080608085870312156200024657600080fd5b620002518562000145565b9350620002616020860162000145565b60408601519093506001600160401b03808211156200027f57600080fd5b6200028d8883890162000178565b93506060870151915080821115620002a457600080fd5b50620002b38782880162000178565b91505092959194509250565b600181811c90821680620002d457607f821691505b60208210811415620002f657634e487b7160e01b600052602260045260246000fd5b50919050565b6112ac806200030c6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806395d89b41116100b2578063ae1f6aaf11610081578063d6c0b2c411610066578063d6c0b2c4146102bb578063dd62ed3e146102db578063e78cea921461032157600080fd5b8063ae1f6aaf1461025e578063c01e1bd61461029d57600080fd5b806395d89b411461021d5780639dc29fac14610225578063a457c2d714610238578063a9059cbb1461024b57600080fd5b806323b872dd1161010957806339509351116100ee57806339509351146101bf57806340c10f19146101d257806370a08231146101e757600080fd5b806323b872dd1461019d578063313ce567146101b057600080fd5b806301ffc9a71461013b57806306fdde0314610163578063095ea7b31461017857806318160ddd1461018b575b600080fd5b61014e610149366004611054565b610341565b60405190151581526020015b60405180910390f35b61016b610452565b60405161015a919061109d565b61014e610186366004611139565b6104e4565b6002545b60405190815260200161015a565b61014e6101ab366004611163565b6104fc565b6040516012815260200161015a565b61014e6101cd366004611139565b610520565b6101e56101e0366004611139565b61056c565b005b61018f6101f536600461119f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61016b610650565b6101e5610233366004611139565b61065f565b61014e610246366004611139565b610732565b61014e610259366004611139565b610803565b60065473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b60055473ffffffffffffffffffffffffffffffffffffffff16610278565b6005546102789073ffffffffffffffffffffffffffffffffffffffff1681565b61018f6102e93660046111ba565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6006546102789073ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27f1d1d8b63000000000000000000000000000000000000000000000000000000007f0bc32271000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000085167f01ffc9a700000000000000000000000000000000000000000000000000000000148061041a57507fffffffff00000000000000000000000000000000000000000000000000000000858116908216145b8061044957507fffffffff00000000000000000000000000000000000000000000000000000000858116908316145b95945050505050565b606060038054610461906111ed565b80601f016020809104026020016040519081016040528092919081815260200182805461048d906111ed565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b5050505050905090565b6000336104f2818585610811565b5060019392505050565b60003361050a8582856109c5565b610515858585610a9c565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104f29082908690610567908790611270565b610811565b60065473ffffffffffffffffffffffffffffffffffffffff1633146105f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064015b60405180910390fd5b6105fc8282610d4f565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161064491815260200190565b60405180910390a25050565b606060048054610461906111ed565b60065473ffffffffffffffffffffffffffffffffffffffff1633146106e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064016105e9565b6106ea8282610e6f565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161064491815260200190565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016105e9565b6105158286868403610811565b6000336104f2818585610a9c565b73ffffffffffffffffffffffffffffffffffffffff83166108b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff8216610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a965781811015610a89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105e9565b610a968484848403610811565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff8216610be2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610c98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610cdc908490611270565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d4291815260200190565b60405180910390a3610a96565b73ffffffffffffffffffffffffffffffffffffffff8216610dcc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e9565b8060026000828254610dde9190611270565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610e18908490611270565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610fc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016105e9565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290611004908490611288565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109b8565b60006020828403121561106657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461109657600080fd5b9392505050565b600060208083528351808285015260005b818110156110ca578581018301518582016040015282016110ae565b818111156110dc576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461113457600080fd5b919050565b6000806040838503121561114c57600080fd5b61115583611110565b946020939093013593505050565b60008060006060848603121561117857600080fd5b61118184611110565b925061118f60208501611110565b9150604084013590509250925092565b6000602082840312156111b157600080fd5b61109682611110565b600080604083850312156111cd57600080fd5b6111d683611110565b91506111e460208401611110565b90509250929050565b600181811c9082168061120157607f821691505b6020821081141561123b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561128357611283611241565b500190565b60008282101561129a5761129a611241565b50039056fea164736f6c634300080a000aa164736f6c634300080a000a",
    "sourceMap": "835:1553:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:697;;;;;;:::i;:::-;;:::i;:::-;;;1985:42:69;1973:55;;;1955:74;;1943:2;1928:18;1689:697:46;;;;;;;1326:140;;;;;;:::i;:::-;;:::i;:::-;;1121:21;;;;;;;;;1689:697;1834:7;1861:26;;;1853:68;;;;;;;2433:2:69;1853:68:46;;;2415:21:69;2472:2;2452:18;;;2445:30;2511:31;2491:18;;;2484:59;2560:18;;1853:68:46;;;;;;;;;1957:1;1939:6;:20;:6;1931:54;;;;;;;2791:2:69;1931:54:46;;;2773:21:69;2830:2;2810:18;;;2803:30;2869:23;2849:18;;;2842:51;2910:18;;1931:54:46;2589:345:69;1931:54:46;1996:32;2070:6;;2031:121;;2070:6;;;;;2090:12;;2116:5;;2135:7;;2031:121;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1996:156;;2240:10;2195:57;;2218:12;2195:57;;;;;;;;;;;;2267:75;;2331:10;1955:74:69;;2267:75:46;;;;;;;;;;;1943:2:69;1928:18;2267:75:46;;;;;;;2368:10;1689:697;-1:-1:-1;;;;1689:697:46:o;1326:140::-;1406:1;1388:6;:20;:6;:20;1380:53;;;;;;;4288:2:69;1380:53:46;;;4270:21:69;4327:2;4307:18;;;4300:30;4366:22;4346:18;;;4339:50;4406:18;;1380:53:46;4086:344:69;1380:53:46;1443:6;:16;;;;;;;;;;;;;;;1326:140::o;-1:-1:-1:-;;;;;;;;:::o;14:196:69:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;267:77;264:1;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:778;447:5;500:3;493:4;485:6;481:17;477:27;467:55;;518:1;515;508:12;467:55;554:6;541:20;580:18;617:2;613;610:10;607:36;;;623:18;;:::i;:::-;757:2;751:9;819:4;811:13;;662:66;807:22;;;831:2;803:31;799:40;787:53;;;855:18;;;875:22;;;852:46;849:72;;;901:18;;:::i;:::-;941:10;937:2;930:22;976:2;968:6;961:18;1022:3;1015:4;1010:2;1002:6;998:15;994:26;991:35;988:55;;;1039:1;1036;1029:12;988:55;1103:2;1096:4;1088:6;1084:17;1077:4;1069:6;1065:17;1052:54;1150:1;1143:4;1138:2;1130:6;1126:15;1122:26;1115:37;1170:6;1161:15;;;;;;404:778;;;;:::o;1187:617::-;1284:6;1292;1300;1353:2;1341:9;1332:7;1328:23;1324:32;1321:52;;;1369:1;1366;1359:12;1321:52;1392:29;1411:9;1392:29;:::i;:::-;1382:39;;1472:2;1461:9;1457:18;1444:32;1495:18;1536:2;1528:6;1525:14;1522:34;;;1552:1;1549;1542:12;1522:34;1575:50;1617:7;1608:6;1597:9;1593:22;1575:50;:::i;:::-;1565:60;;1678:2;1667:9;1663:18;1650:32;1634:48;;1707:2;1697:8;1694:16;1691:36;;;1723:1;1720;1713:12;1691:36;;1746:52;1790:7;1779:8;1768:9;1764:24;1746:52;:::i;:::-;1736:62;;;1187:617;;;;;:::o;2040:186::-;2099:6;2152:2;2140:9;2131:7;2127:23;2123:32;2120:52;;;2168:1;2165;2158:12;2120:52;2191:29;2210:9;2191:29;:::i;:::-;2181:39;2040:186;-1:-1:-1;;;2040:186:69:o;2939:531::-;2981:3;3019:5;3013:12;3046:6;3041:3;3034:19;3071:1;3081:162;3095:6;3092:1;3089:13;3081:162;;;3157:4;3213:13;;;3209:22;;3203:29;3185:11;;;3181:20;;3174:59;3110:12;3081:162;;;3261:6;3258:1;3255:13;3252:87;;;3327:1;3320:4;3311:6;3306:3;3302:16;3298:27;3291:38;3252:87;-1:-1:-1;3384:2:69;3372:15;3389:66;3368:88;3359:98;;;;3459:4;3355:109;;2939:531;-1:-1:-1;;2939:531:69:o;3475:606::-;3691:4;3720:42;3801:2;3793:6;3789:15;3778:9;3771:34;3853:2;3845:6;3841:15;3836:2;3825:9;3821:18;3814:43;;3893:3;3888:2;3877:9;3873:18;3866:31;3920:46;3961:3;3950:9;3946:19;3938:6;3920:46;:::i;:::-;4014:9;4006:6;4002:22;3997:2;3986:9;3982:18;3975:50;4042:33;4068:6;4060;4042:33;:::i;:::-;4034:41;3475:606;-1:-1:-1;;;;;;;3475:606:69:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bridge()": "e78cea92",
    "createStandardL2Token(address,string,string)": "896f93d1",
    "initialize(address)": "c4d66de8"
  },
  "ast": {
    "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/universal/OptimismMintableTokenFactory.sol",
    "id": 13120,
    "exportedSymbols": {
      "Lib_PredeployAddresses": [
        3074
      ],
      "OptimismMintableERC20": [
        13006
      ],
      "OptimismMintableTokenFactory": [
        13119
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2357:46",
    "nodes": [
      {
        "id": 13008,
        "nodeType": "PragmaDirective",
        "src": "32:23:46",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 13010,
        "nodeType": "ImportDirective",
        "src": "80:79:46",
        "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/universal/OptimismMintableERC20.sol",
        "file": "../universal/OptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13120,
        "sourceUnit": 13007,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13009,
              "name": "OptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "89:21:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13012,
        "nodeType": "ImportDirective",
        "src": "160:81:46",
        "absolutePath": "/home/tynes/Projects/github.com/ethereum-optimism/opti2/optimism/packages/contracts-bedrock/contracts/libraries/Lib_PredeployAddresses.sol",
        "file": "../libraries/Lib_PredeployAddresses.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13120,
        "sourceUnit": 3075,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13011,
              "name": "Lib_PredeployAddresses",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "169:22:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13119,
        "nodeType": "ContractDefinition",
        "src": "835:1553:46",
        "nodes": [
          {
            "id": 13019,
            "nodeType": "EventDefinition",
            "src": "879:88:46",
            "anonymous": false,
            "name": "StandardL2TokenCreated",
            "nameLocation": "885:22:46",
            "parameters": {
              "id": 13018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13015,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "924:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13019,
                  "src": "908:28:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13017,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "954:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13019,
                  "src": "938:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:59:46"
            }
          },
          {
            "id": 13027,
            "nodeType": "EventDefinition",
            "src": "972:143:46",
            "anonymous": false,
            "name": "OptimismMintableTokenCreated",
            "nameLocation": "978:28:46",
            "parameters": {
              "id": 13026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13021,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "1032:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "1016:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13023,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "1069:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "1053:28:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13025,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nameLocation": "1099:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "1091:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:108:46"
            }
          },
          {
            "id": 13029,
            "nodeType": "VariableDeclaration",
            "src": "1121:21:46",
            "constant": false,
            "functionSelector": "e78cea92",
            "mutability": "mutable",
            "name": "bridge",
            "nameLocation": "1136:6:46",
            "scope": 13119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13028,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1121:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13050,
            "nodeType": "FunctionDefinition",
            "src": "1326:140:46",
            "body": {
              "id": 13049,
              "nodeType": "Block",
              "src": "1370:96:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13036,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13029,
                          "src": "1388:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1406:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1398:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1398:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1398:10:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1388:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a65642e",
                        "id": 13042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66c8c7088bcb7bdc5c99ac22cb75a134a8e0d8cc46ca1751e1f157b34ab8510f",
                          "typeString": "literal_string \"Already initialized.\""
                        },
                        "value": "Already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66c8c7088bcb7bdc5c99ac22cb75a134a8e0d8cc46ca1751e1f157b34ab8510f",
                          "typeString": "literal_string \"Already initialized.\""
                        }
                      ],
                      "id": 13035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1380:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:53:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13044,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:53:46"
                },
                {
                  "expression": {
                    "id": 13047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13045,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13029,
                      "src": "1443:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13046,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13032,
                      "src": "1452:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1443:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13048,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:16:46"
                }
              ]
            },
            "documentation": {
              "id": 13030,
              "nodeType": "StructuredDocumentation",
              "src": "1149:172:46",
              "text": " @dev Initialize the factory\n On L2 _bridge should be Lib_PredeployAddresses.L2_STANDARD_BRIDGE,\n On L1 _bridge should be the L1StandardBridge"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1335:10:46",
            "parameters": {
              "id": 13033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13032,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nameLocation": "1354:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13050,
                  "src": "1346:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1345:17:46"
            },
            "returnParameters": {
              "id": 13034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:46"
            },
            "scope": 13119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13118,
            "nodeType": "FunctionDefinition",
            "src": "1689:697:46",
            "body": {
              "id": 13117,
              "nodeType": "Block",
              "src": "1843:543:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13063,
                          "name": "_remoteToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13053,
                          "src": "1861:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1885:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1877:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13064,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1877:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1877:10:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1861:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742070726f76696465204c3120746f6b656e2061646472657373",
                        "id": 13069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1889:31:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd2bf49c4d188cf14b79d0e6e325bbbda751541ac52934823270d57b98744e9",
                          "typeString": "literal_string \"Must provide L1 token address\""
                        },
                        "value": "Must provide L1 token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd2bf49c4d188cf14b79d0e6e325bbbda751541ac52934823270d57b98744e9",
                          "typeString": "literal_string \"Must provide L1 token address\""
                        }
                      ],
                      "id": 13062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1853:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:68:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13071,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:68:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13073,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13029,
                          "src": "1939:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1957:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1949:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13074,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1949:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1949:10:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1939:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420696e697469616c697a65206669727374",
                        "id": 13079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1961:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5783203d1370c47692c119372705094bb3201861ed4e7ed9f73aeb0ad593ddbb",
                          "typeString": "literal_string \"Must initialize first\""
                        },
                        "value": "Must initialize first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5783203d1370c47692c119372705094bb3201861ed4e7ed9f73aeb0ad593ddbb",
                          "typeString": "literal_string \"Must initialize first\""
                        }
                      ],
                      "id": 13072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1931:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:54:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13081,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:54:46"
                },
                {
                  "assignments": [
                    13084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13084,
                      "mutability": "mutable",
                      "name": "localToken",
                      "nameLocation": "2018:10:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 13117,
                      "src": "1996:32:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                        "typeString": "contract OptimismMintableERC20"
                      },
                      "typeName": {
                        "id": 13083,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13082,
                          "name": "OptimismMintableERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13006,
                          "src": "1996:21:46"
                        },
                        "referencedDeclaration": 13006,
                        "src": "1996:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                          "typeString": "contract OptimismMintableERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13093,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13088,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13029,
                        "src": "2070:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13089,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13053,
                        "src": "2090:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13090,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13055,
                        "src": "2116:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 13091,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13057,
                        "src": "2135:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 13087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2031:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_OptimismMintableERC20_$13006_$",
                        "typeString": "function (address,address,string memory,string memory) returns (contract OptimismMintableERC20)"
                      },
                      "typeName": {
                        "id": 13086,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13085,
                          "name": "OptimismMintableERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13006,
                          "src": "2035:21:46"
                        },
                        "referencedDeclaration": 13006,
                        "src": "2035:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                          "typeString": "contract OptimismMintableERC20"
                        }
                      }
                    },
                    "id": 13092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:121:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                      "typeString": "contract OptimismMintableERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1996:156:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13095,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13053,
                        "src": "2218:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13098,
                            "name": "localToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13084,
                            "src": "2240:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                              "typeString": "contract OptimismMintableERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                              "typeString": "contract OptimismMintableERC20"
                            }
                          ],
                          "id": 13097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2232:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2232:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2232:19:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13094,
                      "name": "StandardL2TokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13019,
                      "src": "2195:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 13100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:57:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13101,
                  "nodeType": "EmitStatement",
                  "src": "2190:62:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13103,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13053,
                        "src": "2296:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13106,
                            "name": "localToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13084,
                            "src": "2318:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                              "typeString": "contract OptimismMintableERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                              "typeString": "contract OptimismMintableERC20"
                            }
                          ],
                          "id": 13105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2310:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2310:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2310:19:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2331:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2331:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13102,
                      "name": "OptimismMintableTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13027,
                      "src": "2267:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 13110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2267:75:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13111,
                  "nodeType": "EmitStatement",
                  "src": "2262:80:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13114,
                        "name": "localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13084,
                        "src": "2368:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                          "typeString": "contract OptimismMintableERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OptimismMintableERC20_$13006",
                          "typeString": "contract OptimismMintableERC20"
                        }
                      ],
                      "id": 13113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2360:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 13112,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2360:7:46",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 13115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13061,
                  "id": 13116,
                  "nodeType": "Return",
                  "src": "2353:26:46"
                }
              ]
            },
            "documentation": {
              "id": 13051,
              "nodeType": "StructuredDocumentation",
              "src": "1472:212:46",
              "text": " @dev Creates an instance of the standard ERC20 token on L2.\n @param _remoteToken Address of the corresponding L1 token.\n @param _name ERC20 name.\n @param _symbol ERC20 symbol."
            },
            "functionSelector": "896f93d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStandardL2Token",
            "nameLocation": "1698:21:46",
            "parameters": {
              "id": 13058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13053,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "1737:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13118,
                  "src": "1729:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13055,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1773:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13118,
                  "src": "1759:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13054,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13057,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1802:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 13118,
                  "src": "1788:21:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:96:46"
            },
            "returnParameters": {
              "id": 13061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13118,
                  "src": "1834:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:9:46"
            },
            "scope": 13119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OptimismMintableTokenFactory",
        "contractDependencies": [
          13006
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13013,
          "nodeType": "StructuredDocumentation",
          "src": "243:591:46",
          "text": " @title OptimismMintableTokenFactory\n @dev Factory contract for creating standard remote token representations of\n local ERC20s. This can be used to bridge native L1 ERC20s to L2 or native L2\n ERC20s to L1. The tokens created through this factory are meant to operate\n with the StandardBridge contract for deposits/withdrawals.\n This contract is a predeploy on L2 at 0x4200000000000000000000000000000000000012\n TODO: deploy to a deterministic address on L1 networks?\n TODO: should this be extended for L1/L2 with hardcoded values in\n the base contract's initialize?"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13119
        ],
        "name": "OptimismMintableTokenFactory",
        "nameLocation": "844:28:46",
        "scope": 13120,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  }
}